{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { useDispatch } from \"react-redux\";\n\nimport { Route, Switch } from \"react-router-dom\"; // import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\n\nimport firebase from \"./firebase\";\nimport { useStorageState } from 'react-storage-hooks';\nimport UserContext from './context/UserContext';\nimport Controller from './Controller';\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([]);\n  const player = {\n    key: null,\n    name: '',\n    email: '',\n    password: '',\n    score: 0\n  };\n  const playersRef = firebase.database().ref('players');\n  useEffect(() => {\n    const playersRef = firebase.database().ref('players');\n    playersRef.on('value', snapshot => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score\n        });\n      }\n\n      setPlayers(newStatePlayers);\n    });\n  }, []);\n\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser({\n        email: response.user['email'],\n        isAuthenticated: true\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n    console.log('logOut', user);\n    firebase.auth().signOut().then(() => {\n      setUser({\n        email: 'guest',\n        isAuthenticated: false\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onSignup = (email, password, name, score) => {\n    firebase.auth().createUserWithEmailAndPassword(email, password) // .then((cred) => console.log('ZZZZZZZZZ', cred))\n    .then(credential => {\n      setUser({\n        email: credential.user.email,\n        isAuthenticated: true,\n        name: name,\n        score: score\n      });\n      addNewPlayer(email, password, name, score);\n    }).catch(error => console.error(error));\n  };\n\n  const onEdit = (email, password, name, score) => {\n    const playerRef = firebase.database().ref('players/' + players.key);\n    console.log('TTTTTTTT', players);\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score\n    });\n  };\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players');\n    delete player.key;\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    });\n  };\n\n  const deletePlayer = player => {\n    console.log('______', player.key);\n\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player.key);\n      playerRef.remove();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        players,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"d4M67B7VCxINM3IrVG5rke3xCA8=\", false, function () {\n  return [useStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js"],"names":["React","useState","useEffect","Route","Switch","firebase","useStorageState","UserContext","Controller","App","user","setUser","localStorage","players","setPlayers","player","key","name","email","password","score","playersRef","database","ref","on","snapshot","val","newStatePlayers","push","onLogin","auth","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","console","onLogout","log","signOut","onSignup","createUserWithEmailAndPassword","credential","addNewPlayer","onEdit","playerRef","update","deletePlayer","window","confirm","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n// import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\nimport firebase from \"./firebase\";\nimport { useStorageState } from 'react-storage-hooks';\n\nimport UserContext from './context/UserContext'\nimport Controller from './Controller'\n\nfunction App() {\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([])\n\n  const player = { key: null, name: '', email: '', password: '', score: 0}\n  const playersRef = firebase.database().ref('players')\n\n  useEffect(() => {\n    const playersRef = firebase.database().ref('players');\n    playersRef.on('value', (snapshot) => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score,\n        })\n      }\n      setPlayers(newStatePlayers)\n    });\n  }, [])\n\n  const onLogin = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser({\n          email: response.user['email'],\n          isAuthenticated: true,\n        })\n      })\n      .catch(error => console.error(error))\n  }\n\n  const onLogout = () => {\n    console.log('logOut', user)\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser({\n          email: 'guest',\n          isAuthenticated: false\n        });\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onSignup = (email, password, name, score) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      // .then((cred) => console.log('ZZZZZZZZZ', cred))\n      .then((credential) => {\n        setUser({\n          email: credential.user.email,\n          isAuthenticated: true,\n          name: name,\n          score: score\n        })\n        addNewPlayer(email, password, name, score)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onEdit = (email, password, name, score) => {\n    const playerRef = firebase.database().ref('players/' + players.key);\n    console.log('TTTTTTTT', players)\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score,\n    })\n  }\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players')\n    delete player.key\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    })\n  }\n\n  const deletePlayer = (player) => {\n    console.log('______', player.key)\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player.key);\n      playerRef.remove();\n    }\n  }\n\n  return (\n    <>\n      <UserContext.Provider value={{\n        user,\n        players,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      }}>\n          <Controller/>\n      </UserContext.Provider>\n    </>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}