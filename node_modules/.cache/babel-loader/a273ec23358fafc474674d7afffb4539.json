{"ast":null,"code":"import React, { useContext } from 'react';\nimport { HSLtoRGB } from '../../PureFunctions';\nimport KarenContext from '../../KarenContext';\nimport './Window.css';\n\nconst Window = () => {\n  // const values = useContext(KarenContext);\n  // const windowDisplay = values.windowDisplayed;\n  // let windowVisibility = false;\n  // windowVisibility = windowDisplay ? 'windowVisible' : 'windowHidden';\n  // const colorArray = values.colorArray;\n  // const slicedArray = [];\n  // const cheaterArray = ['windowOne', 'windowTwo', 'windowThree', 'windowFour', 'windowFive', 'windowSix']\n  // for (let i = 0; i < 6; i++) {\n  //     let temp = colorArray[i].background\n  //     let sliced = temp.slice(43, temp.length -8)\n  //     sliced = sliced.split(',')\n  //     let first = sliced[0]\n  //     let second = sliced[1]\n  //     let third = sliced[2]\n  //     let combined = `${first}, ${second.slice(0, second.length -1)}, ${third.slice(0, third.length-1)}`\n  //     console.log('OOOOOOOOOO', combined)\n  //     let converted = HSLtoRGB(combined)\n  //     slicedArray.push(combined)\n  // }\n  // return (\n  //     <>\n  //         {values.startBattle &&\n  //             <div className={`windowDiv ${windowVisibility}`}>\n  //                 {cheaterArray.map(cheater => <div key={cheater.toString()} className={`window ${cheater}`} >\n  //                     <div >Only Cheating</div>\n  //                     <div >Yourself</div>\n  //                 </div>)}\n  //             </div>\n  //         }\n  //         {!values.startBattle &&\n  //             <div className={`windowDiv ${windowVisibility}`}>\n  //                 <div className='window windowOne'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[0]}</div>\n  //                 </div>\n  //                 <div className='window windowTwo'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[1]}</div>\n  //                 </div>\n  //                 <div className='window windowThree'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[2]}</div>\n  //                 </div>\n  //                 <div className='window windowFour'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[3]}</div>\n  //                 </div>\n  //                 <div className='window windowFive'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[4]}</div>\n  //                 </div>\n  //                 <div className='window windowSix'>\n  //                     <div>RGB</div>\n  //                     <div>{colorArray[5]}</div>\n  //                 </div>\n  //             </div>\n  //         }\n  //     </>\n  // )\n  return null;\n};\n\n_c = Window;\nexport default Window;\n\nvar _c;\n\n$RefreshReg$(_c, \"Window\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Window/Window.js"],"names":["React","useContext","HSLtoRGB","KarenContext","Window"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,IAAP;AACH,CAhED;;KAAMA,M;AAmEN,eAAeA,MAAf","sourcesContent":["import React, { useContext } from 'react'\n\nimport {HSLtoRGB} from '../../PureFunctions'\nimport KarenContext from '../../KarenContext'\n\nimport './Window.css'\n\nconst Window = () => {\n    // const values = useContext(KarenContext);\n    // const windowDisplay = values.windowDisplayed;\n    // let windowVisibility = false;\n    // windowVisibility = windowDisplay ? 'windowVisible' : 'windowHidden';\n    // const colorArray = values.colorArray;\n    // const slicedArray = [];\n    // const cheaterArray = ['windowOne', 'windowTwo', 'windowThree', 'windowFour', 'windowFive', 'windowSix']\n\n    // for (let i = 0; i < 6; i++) {\n    //     let temp = colorArray[i].background\n    //     let sliced = temp.slice(43, temp.length -8)\n    //     sliced = sliced.split(',')\n    //     let first = sliced[0]\n    //     let second = sliced[1]\n    //     let third = sliced[2]\n    //     let combined = `${first}, ${second.slice(0, second.length -1)}, ${third.slice(0, third.length-1)}`\n    //     console.log('OOOOOOOOOO', combined)\n    //     let converted = HSLtoRGB(combined)\n    //     slicedArray.push(combined)\n    // }\n\n\n    // return (\n    //     <>\n    //         {values.startBattle &&\n    //             <div className={`windowDiv ${windowVisibility}`}>\n    //                 {cheaterArray.map(cheater => <div key={cheater.toString()} className={`window ${cheater}`} >\n    //                     <div >Only Cheating</div>\n    //                     <div >Yourself</div>\n    //                 </div>)}\n    //             </div>\n    //         }\n    //         {!values.startBattle &&\n    //             <div className={`windowDiv ${windowVisibility}`}>\n    //                 <div className='window windowOne'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[0]}</div>\n    //                 </div>\n    //                 <div className='window windowTwo'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[1]}</div>\n    //                 </div>\n    //                 <div className='window windowThree'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[2]}</div>\n    //                 </div>\n    //                 <div className='window windowFour'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[3]}</div>\n    //                 </div>\n    //                 <div className='window windowFive'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[4]}</div>\n    //                 </div>\n    //                 <div className='window windowSix'>\n    //                     <div>RGB</div>\n    //                     <div>{colorArray[5]}</div>\n    //                 </div>\n    //             </div>\n    //         }\n    //     </>\n    // )\n    return null;\n}\n\n\nexport default Window;\n"]},"metadata":{},"sourceType":"module"}