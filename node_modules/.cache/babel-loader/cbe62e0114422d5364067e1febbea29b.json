{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { useDispatch } from \"react-redux\";\n\nimport { Route, Switch } from \"react-router-dom\"; // import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\n\nimport firebase from \"./firebase\";\nimport { useStorageState } from 'react-storage-hooks';\nimport UserContext from './context/UserContext';\nimport Controller from './Controller';\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([]);\n  const player = {\n    key: null,\n    name: '',\n    email: '',\n    password: '',\n    score: 0\n  }; // const playersRef = firebase.database().ref('players')\n  // useEffect(() => {\n  //   const playersRef = firebase.database().ref('players');\n  //   playersRef.on('value', (snapshot) => {\n  //     const players = snapshot.val();\n  //     const newStatePlayers = [];\n  //     for (let player in players) {\n  //       newStatePlayers.push({\n  //         key: player,\n  //         name: players[player].name,\n  //         email: players[player].email,\n  //         password: players[player].password,\n  //         score: players[player].score,\n  //       })\n  //     }\n  //     setPlayers(newStatePlayers)\n  //   });\n  // }, [])\n\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser({\n        email: response.user['email'],\n        isAuthenticated: true\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n    // console.log('logOut', user)\n    firebase.auth().signOut().then(() => {\n      setUser({\n        email: 'guest',\n        isAuthenticated: false\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onSignup = (email, password, name, score) => {\n    console.log('TTTTTTVVVV', email, password, name, score);\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(cred => console.log('ZZZZZZZZZ', cred)).then(credential => {\n      setUser({\n        email: credential.user.email,\n        isAuthenticated: true // key: 'key',\n        // name: name,\n        // score: score\n\n      }); // addNewPlayer(email, password, name, score)\n    }).catch(error => console.error(error));\n  };\n\n  const onEdit = player => {\n    const playerRef = firebase.database().ref('players/' + player.key);\n    console.log('TTTTTTTT', player);\n    playerRef.update({\n      name: player.name,\n      email: player.email,\n      score: player.score\n    });\n  };\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players');\n    delete player.key;\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    });\n  };\n\n  const deletePlayer = player => {\n    console.log('______', player.key);\n\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player.key);\n      playerRef.remove();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        players,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"/mAhHMm2cVkIzhZ3XDC9gSbx31M=\", false, function () {\n  return [useStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js"],"names":["React","useState","useEffect","Route","Switch","firebase","useStorageState","UserContext","Controller","App","user","setUser","localStorage","players","setPlayers","player","key","name","email","password","score","onLogin","auth","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","console","onLogout","signOut","onSignup","log","createUserWithEmailAndPassword","cred","credential","onEdit","playerRef","database","ref","update","addNewPlayer","playersRef","push","deletePlayer","window","confirm","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n// import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\nimport firebase from \"./firebase\";\nimport { useStorageState } from 'react-storage-hooks';\n\nimport UserContext from './context/UserContext'\nimport Controller from './Controller'\n\nfunction App() {\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([])\n\n  const player = { key: null, name: '', email: '', password: '', score: 0}\n  // const playersRef = firebase.database().ref('players')\n\n  // useEffect(() => {\n  //   const playersRef = firebase.database().ref('players');\n  //   playersRef.on('value', (snapshot) => {\n  //     const players = snapshot.val();\n  //     const newStatePlayers = [];\n  //     for (let player in players) {\n  //       newStatePlayers.push({\n  //         key: player,\n  //         name: players[player].name,\n  //         email: players[player].email,\n  //         password: players[player].password,\n  //         score: players[player].score,\n  //       })\n  //     }\n  //     setPlayers(newStatePlayers)\n  //   });\n  // }, [])\n\n  const onLogin = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser({\n          email: response.user['email'],\n          isAuthenticated: true,\n        })\n      })\n      .catch(error => console.error(error))\n  }\n\n  const onLogout = () => {\n    // console.log('logOut', user)\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser({\n          email: 'guest',\n          isAuthenticated: false\n        });\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onSignup = (email, password, name, score) => {\n    console.log('TTTTTTVVVV', email, password, name, score)\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((cred) => console.log('ZZZZZZZZZ', cred))\n      .then((credential) => {\n        setUser({\n          email: credential.user.email,\n          isAuthenticated: true,\n          // key: 'key',\n          // name: name,\n          // score: score\n        })\n        // addNewPlayer(email, password, name, score)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onEdit = (player) => {\n    const playerRef = firebase.database().ref('players/' + player.key);\n    console.log('TTTTTTTT', player)\n    playerRef.update({\n      name: player.name,\n      email: player.email,\n      score: player.score,\n    })\n  }\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players')\n    delete player.key\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    })\n  }\n\n  const deletePlayer = (player) => {\n    console.log('______', player.key)\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player.key);\n      playerRef.remove();\n    }\n  }\n\n  return (\n    <>\n      <UserContext.Provider value={{\n        user,\n        players,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      }}>\n          <Controller/>\n      </UserContext.Provider>\n    </>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}