{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Footer/RightConvertPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import './ConvertContainer.css'\n\nimport './RightConvertPanel.css';\n\nconst RightConvertPanel = props => {\n  _s();\n\n  const [togglePosition, setTogglePosition] = useState(false);\n  const [disable, setDisable] = useState(false);\n  const [triadicRepeating, setTriadicRepeating] = useState('');\n  const [analogousRepeating, setAnalogousRepeating] = useState('');\n  const [pastelRepeating, setPastelRepeating] = useState('');\n  const postition = togglePosition ? 'lowerPosition' : '';\n\n  const disableButtons = () => {\n    setDisable(true);\n\n    if (!togglePosition) {\n      setTimeout(() => {\n        setDisable(false);\n      }, 2200);\n    }\n  };\n\n  const clearRepeat = () => {\n    setTriadicRepeating('');\n    setAnalogousRepeating('');\n    setPastelRepeating('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"convertDiv\",\n    id: \"rightConvert\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightButtonDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightConvertTextDiv\",\n        children: \"Create Random Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `rightConvertButton ${triadicRepeating}`,\n        disabled: disable,\n        onClick: () => {\n          disableButtons();\n          props.toggleCreateTriadic();\n\n          if (props.repeatRender) {\n            props.toggleRepeatRender();\n            clearRepeat();\n            setTriadicRepeating('repeating');\n            props.toggleRepeatRender();\n          }\n        },\n        children: \"Triadic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `rightConvertButton ${analogousRepeating}`,\n        disabled: disable,\n        onClick: () => {\n          disableButtons();\n          props.toggleCreateAnalogous();\n\n          if (props.repeatRender) {\n            clearRepeat();\n            setAnalogousRepeating('repeating');\n          }\n        },\n        children: \"Analogous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `rightConvertButton ${pastelRepeating}`,\n        disabled: disable,\n        onClick: () => {\n          disableButtons();\n          props.toggleCreatePastel();\n\n          if (props.repeatRender) {\n            clearRepeat();\n            setPastelRepeating('repeating');\n          }\n        },\n        children: \"Pastel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repeatLabel\",\n        children: \"Repeat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repeatToggle\",\n        onClick: () => {\n          setTogglePosition(!togglePosition);\n\n          if (togglePosition) {\n            clearRepeat();\n            setDisable(false);\n          }\n\n          props.toggleRepeatRender();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggleText\",\n          children: \"On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggleText\",\n          children: \"Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `innerToggle ${postition}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightConvertInputDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convertBling  firstBling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightLabelDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightLabel\",\n          children: props.toTopLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightInput\",\n          children: props.toTopInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convertBling  secondBling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightLabelDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightLabel\",\n          children: props.toMiddleLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightInput\",\n          children: props.toMiddleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convertBling  thirdBling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightLabelDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightLabel\",\n          children: props.toBottomLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"rightInput\",\n          children: props.toBottomInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RightConvertPanel, \"e3UMHT8DOoyMv2A4a3nwpxUYWNg=\");\n\n_c = RightConvertPanel;\nexport default RightConvertPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightConvertPanel\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Footer/RightConvertPanel.js"],"names":["React","useState","RightConvertPanel","props","togglePosition","setTogglePosition","disable","setDisable","triadicRepeating","setTriadicRepeating","analogousRepeating","setAnalogousRepeating","pastelRepeating","setPastelRepeating","postition","disableButtons","setTimeout","clearRepeat","toggleCreateTriadic","repeatRender","toggleRepeatRender","toggleCreateAnalogous","toggleCreatePastel","toTopLabel","toTopInput","toMiddleLabel","toMiddleInput","toBottomLabel","toBottomInput"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n// import './ConvertContainer.css'\nimport './RightConvertPanel.css'\n\nconst RightConvertPanel = (props) => {\n    const [togglePosition, setTogglePosition] = useState(false);\n    const [disable, setDisable] = useState(false);\n    const [triadicRepeating, setTriadicRepeating] = useState('')\n    const [analogousRepeating, setAnalogousRepeating] = useState('')\n    const [pastelRepeating, setPastelRepeating] = useState('')\n\n\n    const postition = togglePosition ? 'lowerPosition' : ''\n\n    const disableButtons = () => {\n        setDisable(true)\n        if (!togglePosition) {\n            setTimeout(() => {\n                setDisable(false)\n            }, 2200)\n        }\n    }\n\n    const clearRepeat = () => {\n        setTriadicRepeating('')\n        setAnalogousRepeating('')\n        setPastelRepeating('')\n    }\n\n    return (\n        <div className='convertDiv' id='rightConvert'>\n            <div className='rightButtonDiv' >\n                <div className='rightConvertTextDiv'>Create Random Colors</div>\n\n                <button className={`rightConvertButton ${triadicRepeating}`}\n                        disabled={disable}\n                        onClick={() => {\n                            disableButtons()\n                            props.toggleCreateTriadic()\n                            if (props.repeatRender) {\n                                props.toggleRepeatRender()\n                                clearRepeat()\n                                setTriadicRepeating('repeating')\n                                props.toggleRepeatRender()\n                            }\n                } }>Triadic</button>\n\n                <button className={`rightConvertButton ${analogousRepeating}`}\n                        disabled={disable}\n                        onClick={() => {\n                            disableButtons()\n                            props.toggleCreateAnalogous()\n                            if (props.repeatRender) {\n                                clearRepeat()\n                                setAnalogousRepeating('repeating')\n                            }\n                }}>Analogous</button>\n\n                <button className={`rightConvertButton ${pastelRepeating}`}\n                        disabled={disable}\n                        onClick={() => {\n                            disableButtons()\n                            props.toggleCreatePastel()\n                            if (props.repeatRender) {\n                                clearRepeat()\n                                setPastelRepeating('repeating')\n                            }\n\n                }}>Pastel</button>\n\n                <div className='repeatLabel'>Repeat</div>\n\n                <div className='repeatToggle' onClick={() => {\n                    setTogglePosition(!togglePosition)\n                    if (togglePosition) {\n                        clearRepeat()\n                        setDisable(false)\n                    }\n                    props.toggleRepeatRender()\n                }}>\n                    <div className='toggleText'>On</div>\n                    <div className='toggleText'>Off</div>\n                    <div className={`innerToggle ${postition}`}></div>\n                </div>\n            </div>\n\n            <div className='rightConvertInputDiv'>\n                <div className='convertBling  firstBling'></div>\n                <div className='rightLabelDiv'>\n                    <h1 className='rightLabel'>{props.toTopLabel}</h1>\n                    <h1 className='rightInput'>{props.toTopInput}</h1>\n                </div>\n                <div className='convertBling  secondBling'></div>\n                <div className='rightLabelDiv'>\n                    <h1 className='rightLabel'>{props.toMiddleLabel}</h1>\n                    <h1 className='rightInput'>{props.toMiddleInput}</h1>\n                </div>\n                <div className='convertBling  thirdBling'></div>\n                <div className='rightLabelDiv'>\n                    <h1 className='rightLabel'>{props.toBottomLabel}</h1>\n                    <h1 className='rightInput'>{props.toBottomInput}</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RightConvertPanel;\n"]},"metadata":{},"sourceType":"module"}