{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/BattleInstructionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ColorContext from '../../ColorContext';\nimport './BattleInstructionModal.css';\n\nconst BattleInstructionModal = () => {\n  _s();\n\n  const values = useContext(ColorContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battleInstructionDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"definitionDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"defSpan\",\n        children: \"RGB (red, green, and blue)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 50\n      }, this), \"A system for representing the colors to be used on a computer display. Red, green, and blue can be combined in various proportions to obtain any color in the visible spectrum. Each level is represented by the range of decimal numbers from 0 to 255\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exampleDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exampleBall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example leftExample\",\n        children: \"RGB (0, 0, 0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: \"RGB (255, 255, 255)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exampleBall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exampleDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exampleBall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example leftExample\",\n        children: \"RGB (0, 255, 0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: \"RGB (255, 255, 0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exampleBall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summaryDiv\",\n      children: [\"Test your ability to decipher RGB values of increasing complexity.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this), \" Earn points for speed and accuracy!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"gotItButton\",\n      onClick: () => {\n        values.toggleBattleInstructionModal();\n        values.toggleStartBattle();\n        values.startGame();\n      },\n      children: \"Got it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BattleInstructionModal, \"CCktCQUXVHOcUIrlvyB41gXaY/Q=\");\n\n_c = BattleInstructionModal;\nexport default BattleInstructionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"BattleInstructionModal\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/BattleInstructionModal.js"],"names":["React","useContext","ColorContext","BattleInstructionModal","values","toggleBattleInstructionModal","toggleStartBattle","startGame"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,OAAO,8BAAP;;AAEA,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AACjC,QAAMC,MAAM,GAAGH,UAAU,CAACC,YAAD,CAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAA+B;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B,eACqC;AAAA;AAAA;AAAA;AAAA,cADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAsBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,oGAC6B;AAAA;AAAA;AAAA;AAAA,cAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAwBI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAiC,MAAA,OAAO,EAAE,MAAM;AAC5CE,QAAAA,MAAM,CAACC,4BAAP;AACAD,QAAAA,MAAM,CAACE,iBAAP;AACAF,QAAAA,MAAM,CAACG,SAAP;AACH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAnCD;;GAAMJ,sB;;KAAAA,sB;AAqCN,eAAeA,sBAAf","sourcesContent":["import React, { useContext } from 'react'\n\nimport ColorContext from '../../ColorContext'\n\nimport './BattleInstructionModal.css'\n\nconst BattleInstructionModal = () => {\n    const values = useContext(ColorContext);\n\n    return (\n        <div className='battleInstructionDiv'>\n            <div className='definitionDiv'><span className='defSpan'>\n                RGB (red, green, and blue)</span><br/>\n                A system for representing the colors\n                to be used on a computer display. Red, green, and\n                blue can be combined in various proportions to\n                obtain any color in the visible spectrum.\n                Each level is represented by the range of decimal\n                numbers from 0 to 255\n            </div>\n            <div className='exampleDiv'>\n                <div className='exampleBall'></div>\n                <div className='example leftExample'>RGB (0, 0, 0)</div>\n                <div className='example'>RGB (255, 255, 255)</div>\n                <div className='exampleBall'></div>\n            </div>\n            <div className='exampleDiv'>\n                <div className='exampleBall'></div>\n                <div className='example leftExample'>RGB (0, 255, 0)</div>\n                <div className='example'>RGB (255, 255, 0)</div>\n                <div className='exampleBall'></div>\n            </div>\n            <div className='summaryDiv'>Test your ability to decipher RGB values\n                of increasing complexity.<br/> Earn points for speed and accuracy!</div>\n            <button  className='gotItButton' onClick={() => {\n                values.toggleBattleInstructionModal();\n                values.toggleStartBattle();\n                values.startGame();\n            }}>Got it!</button>\n        </div>\n    )\n}\n\nexport default BattleInstructionModal\n"]},"metadata":{},"sourceType":"module"}