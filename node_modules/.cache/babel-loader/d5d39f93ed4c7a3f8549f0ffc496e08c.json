{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/GameContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport ColorContext from '../../ColorContext';\nimport ColorBall from './ColorBall';\nimport './GameContainer.css';\nimport '../Modals/ConvertInstructionModal.css';\n\nconst GameContainer = () => {\n  _s();\n\n  const values = useContext(ColorContext);\n  const arr = values.colorArray;\n  const target = values.colorTargetId; //Arrays for ColorBall map\n\n  let idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n  let delayArray = [0, 750, 600, 450, 300, 150];\n  let indexArray = [0, 1, 2, 3, 4, 5]; // useEffect(() => {}, [arr])\n\n  useEffect(() => {\n    if (!values.gameOn) values.toggleCreateAnalogous();\n  }, [values]); // Ghost-ball effect when clearing board\n  // if (!values.gameOn && values.round > 0) visibility = 'hidden';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lipDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plateDiv\",\n      children: [indexArray.map(index => /*#__PURE__*/_jsxDEV(ColorBall, {\n        id: idArray[index],\n        color: arr[index],\n        delay: delayArray[index] // blurred={arr[index].class}\n        ,\n        target: target,\n        correctGuess: values.correctGuess,\n        removeCoin: values.removeCoin,\n        gameOn: values.gameOn,\n        startConvert: values.startConvert,\n        visibility: \"visible\"\n      }, idArray[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"targetColorDiv\",\n        children: [!values.gameOn && values.round === 0 && //  !values.instructionModal &&\n        !values.startConvert && !values.startBattle && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startButton\",\n          onClick: () => {\n            values.toggleMainModal();\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), values.startConvert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plateWheel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this) // <button className='startButton' onClick={() => {\n        //     values.correctGuess()\n        // }}>Clear</button>\n        , values.startBattle && values.gameOn && values.startBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorText\",\n            children: \"RGB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: values.colorTarget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), values.startBattle && values.round > 0 && !values.gameOn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: \"CORRECT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameContainer, \"RpXDapXwvGQcBTOTmVi6nDmQzEE=\");\n\n_c = GameContainer;\nexport default GameContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameContainer\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/GameContainer.js"],"names":["React","useContext","useEffect","ColorContext","ColorBall","GameContainer","values","arr","colorArray","target","colorTargetId","idArray","delayArray","indexArray","gameOn","toggleCreateAnalogous","map","index","correctGuess","removeCoin","startConvert","round","startBattle","toggleMainModal","colorTarget"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\n\nimport ColorContext from '../../ColorContext';\nimport ColorBall from './ColorBall';\n\nimport './GameContainer.css'\nimport '../Modals/ConvertInstructionModal.css'\n\nconst GameContainer = () => {\n    const values = useContext(ColorContext)\n    const arr = values.colorArray;\n    const target = values.colorTargetId;\n\n    //Arrays for ColorBall map\n    let idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n    let delayArray =[0, 750, 600, 450, 300, 150];\n    let indexArray = [0, 1, 2, 3, 4, 5];\n\n    // useEffect(() => {}, [arr])\n    useEffect(() => {\n        if (!values.gameOn) values.toggleCreateAnalogous()\n    }, [values])\n\n    // Ghost-ball effect when clearing board\n    // if (!values.gameOn && values.round > 0) visibility = 'hidden';\n\n\n    return (\n        <div className='lipDiv'>\n            <div className='plateDiv' >\n                {/* Set the balls */}\n                {indexArray.map(index => (\n                    <ColorBall\n                        key={idArray[index]}\n                        id={idArray[index]}\n                        color={arr[index]}\n                        delay={delayArray[index]}\n                        // blurred={arr[index].class}\n                        target={target}\n                        correctGuess={values.correctGuess}\n                        removeCoin={values.removeCoin}\n                        gameOn={values.gameOn}\n                        startConvert={values.startConvert}\n                        visibility='visible'\n                    />\n                ))}\n                <div className='targetColorDiv' >\n                    {/* Start button */}\n                    {!values.gameOn && values.round === 0 &&\n                    //  !values.instructionModal &&\n                     !values.startConvert &&\n                     !values.startBattle &&\n                        <button className='startButton' onClick={() => {\n                            values.toggleMainModal()\n                        }}>START</button>\n                    }\n                    {/* Clear button */}\n                    {values.startConvert &&\n                        <div className='plateWheel'></div>\n                        // <button className='startButton' onClick={() => {\n                        //     values.correctGuess()\n                        // }}>Clear</button>\n                    }\n                    {/* Target color */}\n                    {values.startBattle &&\n                     values.gameOn &&\n                     values.startBattle &&\n                        <div className='targetDiv'>\n                            <h2 className='colorText'>RGB</h2>\n                            <h2 className='colorNumber'>{values.colorTarget}</h2>\n                        </div>\n                    }\n                    {values.startBattle &&\n                     values.round > 0 &&\n                     !values.gameOn &&\n                        <div className='targetDiv'>\n                            <h2 className='colorNumber'>CORRECT</h2>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}