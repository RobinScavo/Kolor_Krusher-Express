{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\nconst rootReducer = combineReducers({\n  session: sessionReducer\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = prelaodedState => {\n  return createStore(rootReducer, prelaodedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","sessionReducer","rootReducer","session","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","prelaodedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAGA,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAChCM,EAAAA,OAAO,EAAEF;AADuB,CAAD,CAAnC;AAIA,IAAIG,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,EAAAA,QAAQ,GAAGN,eAAe,CAACE,KAAD,CAA1B;AACH,CAFD,MAEO;AACH,QAAMQ,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GAClBC,MAAM,CAACC,oCAAP,IAA+Cd,OADnD;AAEAK,EAAAA,QAAQ,GAAGO,gBAAgB,CAACb,eAAe,CAACE,KAAD,EAAQQ,MAAR,CAAhB,CAA3B;AACH;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACvC,SAAOnB,WAAW,CAACM,WAAD,EAAca,cAAd,EAA8BX,QAA9B,CAAlB;AACH,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\n\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (prelaodedState) => {\n    return createStore(rootReducer, prelaodedState, enhancer);\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}