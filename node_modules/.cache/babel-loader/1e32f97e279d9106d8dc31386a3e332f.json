{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStorageState } from 'react-storage-hooks';\nimport firebase from \"./firebase\";\nimport UserContext from './context/UserContext';\nimport Controller from './Controller';\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState({\n    key: null,\n    name: '',\n    email: '',\n    password: '',\n    score: 0\n  });\n  useEffect(() => {\n    const playersRef = firebase.database().ref('players');\n    playersRef.on('value', snapshot => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score\n        });\n      }\n\n      setPlayers(newStatePlayers);\n    });\n  }, []);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        const currentPlayer = players.find(player => player.email === user.email);\n        setCurrentPlayer({\n          email: user.email,\n          name: currentPlayer.name,\n          score: currentPlayer.score\n        });\n      }\n    });\n  });\n\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser({\n        email: response.user['email'],\n        isAuthenticated: true\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n    firebase.auth().signOut().then(() => {\n      setUser({\n        email: 'guest',\n        isAuthenticated: false\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onSignup = (email, password, name, score) => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(credential => {\n      // console.log('!!!!!!!!!!', credential)\n      setUser({\n        email: credential.user.email,\n        isAuthenticated: true,\n        name: name,\n        score: score\n      });\n      addNewPlayer(email, password, name, score);\n    }).catch(error => console.error(error));\n  };\n\n  const onEdit = (key, email, name, score) => {\n    const playerRef = firebase.database().ref('players/' + key);\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score\n    });\n  }; // const updateScore = (score, key) => {\n  //   const playerRef = firebase.database().ref('players/' + key);\n  //   if()\n  // }\n\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players'); // delete player.key\n\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    });\n  };\n\n  const deletePlayer = player => {\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player);\n      playerRef.remove();\n    }\n\n    onLogout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        players,\n        currentPlayer,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"jy/x5BBnVjG8emB/c6tE8Uq9km0=\", false, function () {\n  return [useStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js"],"names":["React","useState","useEffect","useStorageState","firebase","UserContext","Controller","App","user","setUser","localStorage","players","setPlayers","currentPlayer","setCurrentPlayer","key","name","email","password","score","playersRef","database","ref","on","snapshot","val","newStatePlayers","player","push","auth","onAuthStateChanged","find","onLogin","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","console","onLogout","signOut","onSignup","createUserWithEmailAndPassword","credential","addNewPlayer","onEdit","playerRef","update","deletePlayer","window","confirm","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStorageState } from 'react-storage-hooks';\nimport firebase from \"./firebase\";\n\nimport UserContext from './context/UserContext'\nimport Controller from './Controller'\n\nfunction App() {\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([])\n  const [currentPlayer, setCurrentPlayer] = useState({ key: null, name: '', email: '', password: '', score: 0})\n\n  useEffect(() => {\n    const playersRef = firebase.database().ref('players');\n    playersRef.on('value', (snapshot) => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score,\n        })\n      }\n      setPlayers(newStatePlayers)\n    });\n  }, []);\n\n  useEffect(() => {\n    firebase\n      .auth()\n      .onAuthStateChanged((user) => {\n        if (user) {\n          const currentPlayer = players.find((player) => (player.email === user.email))\n          setCurrentPlayer({\n            email: user.email,\n            name: currentPlayer.name,\n            score: currentPlayer.score,\n         })\n        }\n      })\n  })\n\n  const onLogin = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser({\n          email: response.user['email'],\n          isAuthenticated: true,\n        })\n      })\n      .catch(error => console.error(error))\n  }\n\n  const onLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser({\n          email: 'guest',\n          isAuthenticated: false\n        });\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onSignup = (email, password, name, score) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((credential) => {\n        // console.log('!!!!!!!!!!', credential)\n        setUser({\n          email: credential.user.email,\n          isAuthenticated: true,\n          name: name,\n          score: score\n        })\n        addNewPlayer(email, password, name, score)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onEdit = (key, email, name, score) => {\n    const playerRef = firebase.database().ref('players/' + key);\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score,\n    })\n  }\n\n  // const updateScore = (score, key) => {\n  //   const playerRef = firebase.database().ref('players/' + key);\n  //   if()\n  // }\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players')\n    // delete player.key\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    })\n  }\n\n  const deletePlayer = (player) => {\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player);\n      playerRef.remove();\n    }\n    onLogout();\n  }\n\n  return (\n    <>\n      <UserContext.Provider value={{\n        user,\n        players,\n        currentPlayer,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        addNewPlayer,\n        deletePlayer\n      }}>\n          <Controller/>\n      </UserContext.Provider>\n    </>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}