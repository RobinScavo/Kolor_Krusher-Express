{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/src/Components/Modals/ConvertInstructionModal.js\",\n    _this = this;\n\nimport React from 'react'; // import ColorContext from '../../context/ColorContext';\n\nimport './BattleInstructionModal.css';\nimport './ConvertInstructionModal.css';\n\nvar ConvertInstructionModal = function ConvertInstructionModal(props) {\n  // const values = useContext(ColorContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"convertInstructionDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"explanationDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"defSpan\",\n        children: \"HSL (Hue, Saturation, Light)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 45\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 106\n      }, _this), \"While RGB and Hex values use proportions of red, green and blue, HSL is based on color wheel position which is useful for finding color complements. Use the\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"expSpan\",\n        children: \" Color Converter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, _this), \"to convert your color values or find their compliments.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheelDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wheelLabel\",\n          children: \"COMPLIMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelImage\",\n          alt: \"color wheel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelOverlayOne\",\n          alt: \"first overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"imageCredit\",\n          onClick: function onClick() {\n            return window.open('https://contentwriters.com/blog/psychology-color-content-marketing/');\n          },\n          children: \"Image credit: Deborah K.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelOverlayTwo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wheelLabel triadicLabel\",\n          children: \"TRIADIC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wheelLabel\",\n          children: \"ANALOGOUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelOverlayThree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wheelLabel\",\n          children: \"SPLIT COMPLIMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"gotItButton\",\n      onClick: function onClick() {\n        props.toggleConvertInstructionModal();\n        props.toggleStartConvert();\n        props.startGame();\n      },\n      children: \"Got it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ConvertInstructionModal;\nexport default ConvertInstructionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertInstructionModal\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/src/Components/Modals/ConvertInstructionModal.js"],"names":["React","ConvertInstructionModal","props","window","open","toggleConvertInstructionModal","toggleStartConvert","startGame"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,8BAAP;AACA,OAAO,+BAAP;;AAGA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AACvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BAAgC;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhC,eAA6F;AAAA;AAAA;AAAA;AAAA,eAA7F,+KAII;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,aAAd;AACI,UAAA,OAAO,EAAE;AAAA,mBAAMC,MAAM,CAACC,IAAP,CAAY,qEAAZ,CAAN;AAAA,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAUI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,eAeI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,eAiCI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAiC,MAAA,OAAO,EAAE,mBAAM;AAC5CF,QAAAA,KAAK,CAACG,6BAAN;AACAH,QAAAA,KAAK,CAACI,kBAAN;AACAJ,QAAAA,KAAK,CAACK,SAAN;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAyCH,CA5CD;;KAAMN,uB;AA8CN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\n\n// import ColorContext from '../../context/ColorContext';\n\nimport './BattleInstructionModal.css';\nimport './ConvertInstructionModal.css';\n\n\nconst ConvertInstructionModal = (props) => {\n    // const values = useContext(ColorContext);\n\n    return (\n        <div className='convertInstructionDiv'>\n\n            <div className='explanationDiv'><span className='defSpan'>HSL (Hue, Saturation, Light)</span><br/>\n                While RGB and Hex values use proportions\n                of red, green and blue, HSL is based on color wheel position which is\n                useful for finding color complements. Use the\n                <span className='expSpan'> Color Converter </span>\n                to convert your color values or find their compliments.\n            </div>\n\n            <div className='wheelDiv'>\n                <div className='wheel'>\n                    <h2 className='wheelLabel'>COMPLIMENT</h2>\n                    <div className='wheelImage' alt='color wheel'></div>\n                    <div className='wheelOverlayOne' alt='first overlay'></div>\n                    <h3 className='imageCredit'\n                        onClick={() => window.open('https://contentwriters.com/blog/psychology-color-content-marketing/')}>\n                            Image credit: Deborah K.\n                    </h3>\n                </div>\n                <div className='wheel'>\n                    <div className='wheelImage'></div>\n                    <div className='wheelOverlayTwo'></div>\n                    <h2 className='wheelLabel triadicLabel'>TRIADIC</h2>\n                </div>\n                <div className='wheel'>\n                    <h2 className='wheelLabel'>ANALOGOUS</h2>\n                    <div className='wheelImage'></div>\n                    <div className='wheelOverlayThree'></div>\n                    <h2 className='wheelLabel'>SPLIT COMPLIMENT</h2>\n                </div>\n            </div>\n\n            <button  className='gotItButton' onClick={() => {\n                props.toggleConvertInstructionModal();\n                props.toggleStartConvert();\n                props.startGame();\n              }}>Got it!</button>\n        </div>\n    )\n}\n\nexport default ConvertInstructionModal\n"]},"metadata":{},"sourceType":"module"}