{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/src/Components/RGB/GameContainer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ColorContext from '../../context/ColorContext';\nimport ColorBall from './ColorBall';\nimport './GameContainer.css';\nimport '../Modals/ConvertInstructionModal.css';\n\nvar GameContainer = function GameContainer() {\n  _s();\n\n  var values = useContext(ColorContext);\n  var arr = values.colorArray;\n  var target = values.colorTargetId; //Arrays for ColorBall map\n\n  var idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n  var delayArray = [0, 750, 600, 450, 300, 150];\n  var indexArray = [0, 1, 2, 3, 4, 5];\n  return (\n    /*#__PURE__*/\n    // <div className={`lipDiv`}>\n    //     <div className='plateDiv' >\n    _jsxDEV(_Fragment, {\n      children: [indexArray.map(function (index) {\n        return /*#__PURE__*/_jsxDEV(ColorBall, {\n          id: idArray[index],\n          color: arr[index],\n          delay: delayArray[index],\n          target: target,\n          correctGuess: values.correctGuess,\n          removeCoin: values.removeCoin,\n          gameOn: values.gameOn,\n          startConvert: values.startConvert,\n          visibility: \"visible\"\n        }, idArray[index], false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"targetColorDiv\",\n        children: [!values.startConvert && !values.startBattle && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startButton\",\n          onClick: function onClick() {\n            values.toggleMainModal();\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, _this), values.startConvert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plateWheel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, _this), values.startBattle && values.gameOn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorText\",\n            children: \"RGB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: values.colorTarget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, _this), values.startBattle && values.round > 0 && !values.gameOn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: \"CORRECT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true) //     </div>\n    // </div>\n\n  );\n};\n\n_s(GameContainer, \"CCktCQUXVHOcUIrlvyB41gXaY/Q=\");\n\n_c = GameContainer;\nexport default GameContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameContainer\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/src/Components/RGB/GameContainer.js"],"names":["React","useContext","ColorContext","ColorBall","GameContainer","values","arr","colorArray","target","colorTargetId","idArray","delayArray","indexArray","map","index","correctGuess","removeCoin","gameOn","startConvert","startBattle","toggleMainModal","colorTarget","round"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,qBAAP;AACA,OAAO,uCAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACxB,MAAMC,MAAM,GAAGJ,UAAU,CAACC,YAAD,CAAzB;AACA,MAAMI,GAAG,GAAGD,MAAM,CAACE,UAAnB;AACA,MAAMC,MAAM,GAAGH,MAAM,CAACI,aAAtB,CAHwB,CAKxB;;AACA,MAAIC,OAAO,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,WAAvC,EAAoD,WAApD,EAAiE,UAAjE,CAAd;AACA,MAAIC,UAAU,GAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAAhB;AACA,MAAIC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAjB;AAEA;AAAA;AACI;AACA;AACA;AAAA,iBAESA,UAAU,CAACC,GAAX,CAAe,UAAAC,KAAK;AAAA,4BACjB,QAAC,SAAD;AAEI,UAAA,EAAE,EAAEJ,OAAO,CAACI,KAAD,CAFf;AAGI,UAAA,KAAK,EAAER,GAAG,CAACQ,KAAD,CAHd;AAII,UAAA,KAAK,EAAEH,UAAU,CAACG,KAAD,CAJrB;AAKI,UAAA,MAAM,EAAEN,MALZ;AAMI,UAAA,YAAY,EAAEH,MAAM,CAACU,YANzB;AAOI,UAAA,UAAU,EAAEV,MAAM,CAACW,UAPvB;AAQI,UAAA,MAAM,EAAEX,MAAM,CAACY,MARnB;AASI,UAAA,YAAY,EAAEZ,MAAM,CAACa,YATzB;AAUI,UAAA,UAAU,EAAC;AAVf,WACSR,OAAO,CAACI,KAAD,CADhB;AAAA;AAAA;AAAA;AAAA,iBADiB;AAAA,OAApB,CAFT,eAiBQ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBAGM,CAACT,MAAM,CAACa,YAAR,IACD,CAACb,MAAM,CAACc,WADP,iBAEE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,mBAAM;AAC3Cd,YAAAA,MAAM,CAACe,eAAP;AACH,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALR,EAWKf,MAAM,CAACa,YAAP,iBACG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAZR,EAgBKb,MAAM,CAACc,WAAP,IACAd,MAAM,CAACY,MADP,iBAEG;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6BZ,MAAM,CAACgB;AAApC;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBR,EAyBKhB,MAAM,CAACc,WAAP,IACAd,MAAM,CAACiB,KAAP,GAAe,CADf,IAEA,CAACjB,MAAM,CAACY,MAFR,iBAGG;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA5BR;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBR;AAAA,oBAHJ,CAsDI;AACA;;AAvDJ;AAyDH,CAnED;;GAAMb,a;;KAAAA,a;AAqEN,eAAeA,aAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport ColorContext from '../../context/ColorContext';\nimport ColorBall from './ColorBall';\n\nimport './GameContainer.css'\nimport '../Modals/ConvertInstructionModal.css'\n\nconst GameContainer = () => {\n    const values = useContext(ColorContext)\n    const arr = values.colorArray;\n    const target = values.colorTargetId;\n\n    //Arrays for ColorBall map\n    let idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n    let delayArray =[0, 750, 600, 450, 300, 150];\n    let indexArray = [0, 1, 2, 3, 4, 5];\n\n    return (\n        // <div className={`lipDiv`}>\n        //     <div className='plateDiv' >\n        <>\n                {/* Set the balls */}\n                {indexArray.map(index => (\n                    <ColorBall\n                        key={idArray[index]}\n                        id={idArray[index]}\n                        color={arr[index]}\n                        delay={delayArray[index]}\n                        target={target}\n                        correctGuess={values.correctGuess}\n                        removeCoin={values.removeCoin}\n                        gameOn={values.gameOn}\n                        startConvert={values.startConvert}\n                        visibility='visible'\n                    />\n                ))}\n\n                <div className='targetColorDiv' >\n\n                    {/* Start button */}\n                     {!values.startConvert &&\n                     !values.startBattle &&\n                        <button className='startButton' onClick={() => {\n                            values.toggleMainModal()\n                        }}>START</button>\n                    }\n\n                    {/* Color Wheel */}\n                    {values.startConvert &&\n                        <div className='plateWheel'></div>\n                    }\n\n                    {/* Target color */}\n                    {values.startBattle &&\n                     values.gameOn &&\n                        <div className='targetDiv'>\n                            <h2 className='colorText'>RGB</h2>\n                            <h2 className='colorNumber'>{values.colorTarget}</h2>\n                        </div>\n                    }\n\n                    {/* 'Correct' message */}\n                    {values.startBattle &&\n                     values.round > 0 &&\n                     !values.gameOn &&\n                        <div className='targetDiv'>\n                            <h2 className='colorNumber'>CORRECT</h2>\n                        </div>\n                    }\n                </div>\n                    </>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}