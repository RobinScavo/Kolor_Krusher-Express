{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStorageState } from 'react-storage-hooks';\nimport firebase from \"./firebase\";\nimport UserContext from './context/UserContext';\nimport Controller from './Controller';\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([]);\n  const [currentPlayer, setCurrentPlayer] = useState({\n    key: null,\n    name: '',\n    email: '',\n    score: 0\n  });\n  useEffect(() => {\n    const playersRef = firebase.database().ref('players').orderByChild('score');\n    playersRef.on('value', snapshot => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score\n        });\n      }\n\n      newStatePlayers.sort(function (a, b) {\n        return a.score - b.score;\n      });\n      console.log('MMMMMMMMM', newStatePlayers); // newStatePlayers.orderByChild('players/score')\n\n      setPlayers(newStatePlayers);\n    });\n  }, []);\n  useEffect(() => {\n    let targetPlayer = {\n      key: null,\n      name: '',\n      email: '',\n      score: 0\n    };\n\n    if (user.email) {\n      targetPlayer = players.find(player => player.email === user.email);\n    } else {\n      return;\n    }\n\n    console.log(targetPlayer);\n    firebase.auth().onAuthStateChanged(() => {\n      if (targetPlayer) {\n        setCurrentPlayer({\n          key: targetPlayer.key,\n          name: targetPlayer.name,\n          email: targetPlayer.email,\n          score: targetPlayer.score\n        });\n      }\n    });\n  }, [user, players]);\n\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser({\n        email: response.user['email'],\n        isAuthenticated: true\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onDemoLogin = () => onLogin('player@gmail.com', '121212');\n\n  const onLogout = () => {\n    firebase.auth().signOut().then(() => {\n      setCurrentPlayer({\n        key: null,\n        name: '',\n        email: '',\n        score: 0\n      });\n      setUser({\n        email: '',\n        isAuthenticated: false\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onSignup = (email, password, name, score) => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(credential => {\n      // console.log('!!!!!!!!!!', credential)\n      setUser({\n        email: credential.user.email,\n        isAuthenticated: true\n      });\n      addNewPlayer(email, password, name, score);\n    }).catch(error => console.error(error));\n  };\n\n  const onEdit = (key, email, name, score) => {\n    const playerRef = firebase.database().ref('players/' + key);\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score\n    });\n  };\n\n  const updateScore = newScore => {\n    const playerRef = firebase.database().ref('players/' + currentPlayer.key);\n\n    if (newScore > currentPlayer.score) {\n      playerRef.update({\n        name: currentPlayer.name,\n        email: currentPlayer.email,\n        score: newScore\n      });\n    }\n  };\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players'); // delete player.key\n\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    });\n  };\n\n  const deletePlayer = player => {\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player);\n      playerRef.remove();\n    }\n\n    onLogout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        players,\n        currentPlayer,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        onDemoLogin,\n        addNewPlayer,\n        deletePlayer,\n        updateScore\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"5UMQb3fKSlITLNUrdiWhN20jxNA=\", false, function () {\n  return [useStorageState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js"],"names":["React","useState","useEffect","useStorageState","firebase","UserContext","Controller","App","user","setUser","localStorage","players","setPlayers","currentPlayer","setCurrentPlayer","key","name","email","score","playersRef","database","ref","orderByChild","on","snapshot","val","newStatePlayers","player","push","password","sort","a","b","console","log","targetPlayer","find","auth","onAuthStateChanged","onLogin","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","onDemoLogin","onLogout","signOut","onSignup","createUserWithEmailAndPassword","credential","addNewPlayer","onEdit","playerRef","update","updateScore","newScore","deletePlayer","window","confirm","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStorageState } from 'react-storage-hooks';\nimport firebase from \"./firebase\";\n\nimport UserContext from './context/UserContext'\nimport Controller from './Controller'\n\nfunction App() {\n  const [user, setUser] = useStorageState(localStorage, 'state-user', {});\n  const [players, setPlayers] = useState([])\n  const [currentPlayer, setCurrentPlayer] = useState({ key: null, name: '', email: '', score: 0})\n\n  useEffect(() => {\n    const playersRef =\n      firebase\n        .database()\n        .ref('players')\n        .orderByChild('score');\n    playersRef.on('value', (snapshot) => {\n      const players = snapshot.val();\n      const newStatePlayers = [];\n      for (let player in players) {\n        newStatePlayers.push({\n          key: player,\n          name: players[player].name,\n          email: players[player].email,\n          password: players[player].password,\n          score: players[player].score,\n        })\n      }\n      newStatePlayers.sort(function(a, b) {\n        return a.score - b.score\n      })\n      console.log('MMMMMMMMM', newStatePlayers)\n      // newStatePlayers.orderByChild('players/score')\n      setPlayers(newStatePlayers)\n    });\n  }, []);\n\n  useEffect(() => {\n    let targetPlayer = { key: null, name: '', email: '', score: 0}\n    if (user.email) {\n      targetPlayer = players.find((player) => (player.email === user.email))\n    } else {\n      return\n    }\n    console.log(targetPlayer)\n    firebase\n      .auth()\n      .onAuthStateChanged(() => {\n        if (targetPlayer) {\n          setCurrentPlayer({\n            key: targetPlayer.key,\n            name: targetPlayer.name,\n            email: targetPlayer.email,\n            score: targetPlayer.score\n          })\n        }\n      })\n  }, [user, players]);\n\n  const onLogin = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        setUser({\n          email: response.user['email'],\n          isAuthenticated: true,\n        })\n      })\n      .catch(error => console.error(error))\n  }\n\n  const onDemoLogin = () => onLogin('player@gmail.com', '121212')\n\n  const onLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setCurrentPlayer({\n          key: null,\n          name: '',\n          email: '',\n          score: 0\n        })\n        setUser({\n          email: '',\n          isAuthenticated: false\n        });\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onSignup = (email, password, name, score) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((credential) => {\n        // console.log('!!!!!!!!!!', credential)\n        setUser({\n          email: credential.user.email,\n          isAuthenticated: true,\n        })\n        addNewPlayer(email, password, name, score)\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const onEdit = (key, email, name, score) => {\n    const playerRef = firebase.database().ref('players/' + key);\n    playerRef.update({\n      name: name,\n      email: email,\n      score: score,\n    })\n  }\n\n  const updateScore = (newScore) => {\n    const playerRef = firebase.database().ref('players/' + currentPlayer.key);\n    if(newScore > currentPlayer.score) {\n      playerRef.update({\n        name: currentPlayer.name,\n        email: currentPlayer.email,\n        score: newScore\n      })\n    }\n  }\n\n  const addNewPlayer = (email, password, name, score) => {\n    const playersRef = firebase.database().ref('players')\n    // delete player.key\n    playersRef.push({\n      name: name,\n      email: email,\n      password: password,\n      score: score\n    })\n  }\n\n  const deletePlayer = (player) => {\n    if (window.confirm('Your account will be deleted. Proceed?')) {\n      const playerRef = firebase.database().ref('players/' + player);\n      playerRef.remove();\n    }\n    onLogout();\n  }\n\n  return (\n    <>\n      <UserContext.Provider value={{\n        user,\n        players,\n        currentPlayer,\n        onLogin,\n        onLogout,\n        onSignup,\n        onEdit,\n        onDemoLogin,\n        addNewPlayer,\n        deletePlayer,\n        updateScore\n      }}>\n          <Controller/>\n      </UserContext.Provider>\n    </>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}