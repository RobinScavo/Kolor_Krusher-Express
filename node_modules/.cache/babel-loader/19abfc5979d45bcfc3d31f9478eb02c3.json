{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Banner/CryptoCoin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport ColorContext from '../../ColorContext';\nimport './CryptoCoin.css';\n\nconst CryptoCoin = props => {\n  _s();\n\n  const values = useContext(ColorContext);\n  const id = values.coinArray[props.index];\n  const rolloutIdArray = ['cryptoOneRoll', 'cryptoTwoRoll', 'cryptoThreeRoll'];\n  const fallIdArray = ['cryptoOneFall', 'cryptoTwoFall', 'cryptoThreeFall'];\n  const coinContainerArray = ['coinContainerOne', 'coinContainerTwo', 'coinContainerThree'];\n  const containerId = coinContainerArray[props.index];\n  const rolloutId = rolloutIdArray[props.index];\n  const fallId = fallIdArray[props.index];\n  let rollout = '';\n  let falling = '';\n  const [isRolling, setisRolling] = useState(false);\n  const [isFalling, setIsFalling] = useState(false);\n  useEffect(() => {\n    setisRolling(!id);\n\n    if (values.gameOn && isFalling) {\n      setTimeout(() => {\n        setIsFalling(false);\n      }, 2800);\n    }\n\n    if (!values.gameOn && values.round > 0) {\n      setIsFalling(id);\n    }\n  }, [id, values.gameOn, values.round, isFalling]);\n  falling = isFalling ? fallId : '';\n  rollout = isRolling ? rolloutId : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `coinContainer ${containerId} ${rollout} ${falling}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cryptoCoin ${props.className} cryptoCoinFront`,\n      children: \"cc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoCoin, \"wCkNDyKrJ5BUSRcjEzPvnR6G89c=\");\n\n_c = CryptoCoin;\nexport default CryptoCoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoCoin\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Banner/CryptoCoin.js"],"names":["React","useContext","useState","useEffect","ColorContext","CryptoCoin","props","values","id","coinArray","index","rolloutIdArray","fallIdArray","coinContainerArray","containerId","rolloutId","fallId","rollout","falling","isRolling","setisRolling","isFalling","setIsFalling","gameOn","setTimeout","round","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,MAAM,GAAGN,UAAU,CAACG,YAAD,CAAzB;AACA,QAAMI,EAAE,GAAGD,MAAM,CAACE,SAAP,CAAiBH,KAAK,CAACI,KAAvB,CAAX;AACA,QAAMC,cAAc,GAAG,CAAC,eAAD,EAAkB,eAAlB,EAAmC,iBAAnC,CAAvB;AACA,QAAMC,WAAW,GAAG,CAAC,eAAD,EAAkB,eAAlB,EAAmC,iBAAnC,CAApB;AACA,QAAMC,kBAAkB,GAAG,CAAC,kBAAD,EAAqB,kBAArB,EAAyC,oBAAzC,CAA3B;AACA,QAAMC,WAAW,GAAGD,kBAAkB,CAACP,KAAK,CAACI,KAAP,CAAtC;AACA,QAAMK,SAAS,GAAGJ,cAAc,CAACL,KAAK,CAACI,KAAP,CAAhC;AACA,QAAMM,MAAM,GAAGJ,WAAW,CAACN,KAAK,CAACI,KAAP,CAA1B;AAEA,MAAIO,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY,CAAC,CAACZ,EAAF,CAAZ;;AACA,QAAID,MAAM,CAACgB,MAAP,IAAiBF,SAArB,EAAgC;AAC5BG,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;;AACD,QAAI,CAACf,MAAM,CAACgB,MAAR,IAAkBhB,MAAM,CAACkB,KAAP,GAAe,CAArC,EAAwC;AACpCH,MAAAA,YAAY,CAACd,EAAD,CAAZ;AACH;AACJ,GAVQ,EAUN,CAACA,EAAD,EAAKD,MAAM,CAACgB,MAAZ,EAAoBhB,MAAM,CAACkB,KAA3B,EAAkCJ,SAAlC,CAVM,CAAT;AAaAH,EAAAA,OAAO,GAAGG,SAAS,GAAGL,MAAH,GAAY,EAA/B;AACAC,EAAAA,OAAO,GAAGE,SAAS,GAAGJ,SAAH,GAAe,EAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,iBAAgBD,WAAY,IAAGG,OAAQ,IAAGC,OAAQ,EAAnE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,cAAaZ,KAAK,CAACoB,SAAU,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCD;;GAAMrB,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport ColorContext from '../../ColorContext';\nimport './CryptoCoin.css'\n\nconst CryptoCoin = (props) => {\n    const values = useContext(ColorContext);\n    const id = values.coinArray[props.index];\n    const rolloutIdArray = ['cryptoOneRoll', 'cryptoTwoRoll', 'cryptoThreeRoll'];\n    const fallIdArray = ['cryptoOneFall', 'cryptoTwoFall', 'cryptoThreeFall'];\n    const coinContainerArray = ['coinContainerOne', 'coinContainerTwo', 'coinContainerThree'];\n    const containerId = coinContainerArray[props.index]\n    const rolloutId = rolloutIdArray[props.index];\n    const fallId = fallIdArray[props.index];\n\n    let rollout = '';\n    let falling = '';\n\n    const [isRolling, setisRolling] = useState(false)\n    const [isFalling, setIsFalling] = useState(false)\n\n    useEffect(() => {\n        setisRolling(!id)\n        if (values.gameOn && isFalling) {\n            setTimeout(() => {\n                setIsFalling(false)\n            }, 2800)\n        }\n        if (!values.gameOn && values.round > 0) {\n            setIsFalling(id)\n        }\n    }, [id, values.gameOn, values.round, isFalling])\n\n\n    falling = isFalling ? fallId : '';\n    rollout = isRolling ? rolloutId : '';\n\n    return (\n        <div className={`coinContainer ${containerId} ${rollout} ${falling}`}>\n            <div className={`cryptoCoin ${props.className} cryptoCoinFront`}>cc</div>\n        </div>\n    )\n}\n\nexport default CryptoCoin;\n"]},"metadata":{},"sourceType":"module"}