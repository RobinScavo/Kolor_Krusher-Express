{"ast":null,"code":"import _slicedToArray from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext,useState,useEffect}from'react';import ColorContext from'../../ColorContext';import'./ScoreTimer.css';import'../RGB/GameContainer.css';var ScoreTimer=function ScoreTimer(){var values=useContext(ColorContext);var update=values.updateTimer;var falling='';var _useState=useState(values.timer),_useState2=_slicedToArray(_useState,2),seconds=_useState2[0],setSeconds=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isFalling=_useState4[0],setIsFalling=_useState4[1];useEffect(function(){var interval=null;if(values.gameOn&&seconds>0){interval=setInterval(function(){setSeconds(function(seconds){return seconds-1;});return seconds;},1000);}if(!values.gameOn&&seconds!==15){update(seconds);setSeconds(15);}return function(){return clearInterval(interval);};},[values.gameOn,seconds,update]);useEffect(function(){if(values.gameOn&&isFalling){setTimeout(function(){setIsFalling(false);},2800);}if(!values.gameOn&&values.round>0){setIsFalling(true);}},[isFalling,values.gameOn,values.round]);falling=isFalling?'scoreFall':'';return/*#__PURE__*/_jsx(\"div\",{className:\"scoreContainer \".concat(falling),children:/*#__PURE__*/_jsxs(\"div\",{className:\"scoreTimerDiv scoreTimerFront\",children:[!values.startBattle&&/*#__PURE__*/_jsx(\"h1\",{className:\"scoreTimer\",children:\"cc\"}),values.startBattle&&/*#__PURE__*/_jsx(\"h1\",{className:\"scoreTimer\",children:seconds})]})});};export default ScoreTimer;","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Banner/ScoreTimer.js"],"names":["React","useContext","useState","useEffect","ColorContext","ScoreTimer","values","update","updateTimer","falling","timer","seconds","setSeconds","isFalling","setIsFalling","interval","gameOn","setInterval","clearInterval","setTimeout","round","startBattle"],"mappings":"2RAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CAEA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,MAAO,kBAAP,CACA,MAAO,0BAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,MAAM,CAAGL,UAAU,CAACG,YAAD,CAAzB,CACA,GAAMG,CAAAA,MAAM,CAAGD,MAAM,CAACE,WAAtB,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CAHqB,cAKUP,QAAQ,CAACI,MAAM,CAACI,KAAR,CALlB,wCAKdC,OALc,eAKLC,UALK,8BAMaV,QAAQ,CAAC,KAAD,CANrB,yCAMdW,SANc,eAMHC,YANG,eAQrBX,SAAS,CAAC,UAAM,CACZ,GAAIY,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIT,MAAM,CAACU,MAAP,EAAiBL,OAAO,CAAG,CAA/B,CAAkC,CAC9BI,QAAQ,CAAGE,WAAW,CAAC,UAAM,CACzBL,UAAU,CAAC,SAAAD,OAAO,QAAIA,CAAAA,OAAO,CAAE,CAAb,EAAR,CAAV,CACA,MAAOA,CAAAA,OAAP,CACH,CAHqB,CAGnB,IAHmB,CAAtB,CAIH,CACD,GAAI,CAACL,MAAM,CAACU,MAAR,EAAkBL,OAAO,GAAK,EAAlC,CAAsC,CAClCJ,MAAM,CAACI,OAAD,CAAN,CACAC,UAAU,CAAC,EAAD,CAAV,CACH,CACD,MAAO,kBAAMM,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACH,CAbQ,CAaN,CAACT,MAAM,CAACU,MAAR,CAAgBL,OAAhB,CAAyBJ,MAAzB,CAbM,CAAT,CAeAJ,SAAS,CAAC,UAAM,CACZ,GAAIG,MAAM,CAACU,MAAP,EAAiBH,SAArB,CAAgC,CAC5BM,UAAU,CAAC,UAAM,CACbL,YAAY,CAAC,KAAD,CAAZ,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CACD,GAAI,CAACR,MAAM,CAACU,MAAR,EAAkBV,MAAM,CAACc,KAAP,CAAe,CAArC,CAAwC,CACpCN,YAAY,CAAC,IAAD,CAAZ,CACH,CACJ,CATQ,CASN,CAACD,SAAD,CAAYP,MAAM,CAACU,MAAnB,CAA2BV,MAAM,CAACc,KAAlC,CATM,CAAT,CAWAX,OAAO,CAAGI,SAAS,CAAG,WAAH,CAAiB,EAApC,CAGA,mBACI,YAAK,SAAS,0BAAoBJ,OAApB,CAAd,uBACI,aAAK,SAAS,CAAC,+BAAf,WACK,CAACH,MAAM,CAACe,WAAR,eACG,WAAI,SAAS,CAAC,YAAd,gBAFR,CAIKf,MAAM,CAACe,WAAP,eACG,WAAI,SAAS,CAAC,YAAd,UAA4BV,OAA5B,EALR,GADJ,EADJ,CAYH,CAjDD,CAmDA,cAAeN,CAAAA,UAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport ColorContext from '../../ColorContext';\nimport './ScoreTimer.css'\nimport '../RGB/GameContainer.css'\n\nconst ScoreTimer = () => {\n    const values = useContext(ColorContext);\n    const update = values.updateTimer;\n    let falling = '';\n\n    const [seconds, setSeconds ] = useState(values.timer);\n    const [isFalling, setIsFalling] = useState(false)\n\n    useEffect(() => {\n        let interval = null;\n        if (values.gameOn && seconds > 0) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds -1);\n                return seconds\n            }, 1000);\n        }\n        if (!values.gameOn && seconds !== 15) {\n            update(seconds);\n            setSeconds(15);\n        }\n        return () => clearInterval(interval)\n    }, [values.gameOn, seconds, update])\n\n    useEffect(() => {\n        if (values.gameOn && isFalling) {\n            setTimeout(() => {\n                setIsFalling(false)\n            }, 2800)\n        }\n        if (!values.gameOn && values.round > 0) {\n            setIsFalling(true)\n        }\n    }, [isFalling, values.gameOn, values.round])\n\n    falling = isFalling ? 'scoreFall' : ''\n\n\n    return (\n        <div className={`scoreContainer ${falling}`}>\n            <div className='scoreTimerDiv scoreTimerFront'>\n                {!values.startBattle &&\n                    <h1 className='scoreTimer'>cc</h1>\n                }\n                {values.startBattle &&\n                    <h1 className='scoreTimer'>{seconds}</h1>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ScoreTimer;\n"]},"metadata":{},"sourceType":"module"}