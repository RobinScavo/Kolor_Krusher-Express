{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{generateEasyArray,generateTriadicArray,generateAnalogousArray,generateGhostArray,generatePastelArray,generateCustomArray}from'./PureFunctions';import Backdrop from'./Components/Backdrop/Backdrop';import ColorContext from'./ColorContext';import MainModal from'./Components/Modals/MainModal';import LoginModal from'./Components/Modals/LoginFormModal';import PlayerPageModal from'./Components/Modals/PlayerPageModal';import MyBioModal from'./Components/Modals/MyBioModal';import BattleInstructionModal from'./Components/Modals/BattleInstructionModal';import ConvertInstructionModal from'./Components/Modals/ConvertInstructionModal';import ScoringModal from'./Components/Modals/ScoringModal';import{Modal}from'./ModalContext/Modal';import{ModalProvider}from'./ModalContext/Modal';var Controller=/*#__PURE__*/function(_React$Component){_inherits(Controller,_React$Component);var _super=_createSuper(Controller);function Controller(props){var _this;_classCallCheck(this,Controller);var battleArray=generateAnalogousArray();_this=_super.call(this,props);_this.toggleMainModal=function(){_this.setState({repeatRender:false,createAnalogous:false,MainModal:!_this.state.MainModal,coinArray:[true,true,true],round:0,coins:0,score:0,timer:15});};_this.toggleLoginModal=function(){return _this.setState({loginModal:!_this.state.loginModal});};_this.toggleBioModal=function(){return _this.setState({bioModal:!_this.state.bioModal});};_this.togglePlayerPageModal=function(){return _this.setState({playerPageModal:!_this.state.playerPageModal});};_this.toggleBattleInstructionModal=function(){return _this.setState({battleInstructionModal:!_this.state.battleInstructionModal});};_this.toggleConvertInstructionModal=function(){return _this.setState({convertInstructionModal:!_this.state.convertInstructionModal});};_this.toggleScoringModal=function(){return _this.setState({scoringModal:!_this.state.scoringModal});};_this.toggleGameOn=function(){return _this.setState({gameOn:false});};_this.toggleWindowDisplay=function(){return _this.setState({windowDisplayed:!_this.state.windowDisplayed});};_this.toggleCustomDisplay=function(){return _this.setState({customDisplayed:!_this.state.customDisplayed});};_this.clearRounds=function(){return _this.setState({round:0});};_this.toggleRepeatRender=function(){if(_this.state.repeatRender){_this.setState({createPastel:false,createTriadic:false,createAnalogous:false,repeatRender:false});}else{_this.setState({repeatRender:true});}};_this.toggleCreateAnalogous=function(){_this.setState({createAnalogous:true});_this.clearBoard();setTimeout(function(){_this.updateColorArrayContext();if(!_this.state.repeatRender){_this.setState({createAnalogous:false});}},1100);};_this.toggleCreatePastel=function(){_this.setState({createPastel:true});_this.clearBoard();setTimeout(function(){_this.updateColorArrayContext();if(!_this.state.repeatRender){_this.setState({createPastel:false});}},1100);};_this.toggleCreateTriadic=function(){_this.setState({createTriadic:true});_this.clearBoard();setTimeout(function(){_this.updateColorArrayContext();if(!_this.state.repeatRender){_this.setState({createTriadic:false});}},1100);};_this.setCustomColor=function(custom){_this.setState({createCustom:true,customColor:custom});_this.clearBoard();setTimeout(function(){_this.updateColorArrayContext();_this.setState({customDisplayed:true,createCustom:false});},1100);setTimeout(function(){_this.setState({customDisplayed:false});},3100);};_this.toggleStartBattle=function(){if(_this.state.startConvert)_this.toggleStartConvert();_this.setState({startBattle:!_this.state.startBattle});};_this.toggleStartConvert=function(){if(_this.state.startBattle)_this.toggleStartBattle();_this.setState({startConvert:!_this.state.startConvert});};_this.startGame=function(){_this.clearBoard();_this.timeout=setTimeout(function(){_this.setState({gameOn:true});_this.updateColorArrayContext();},1100);};_this.removeCoin=function(){var tempArray=[];if(_this.state.coinArray[0]){tempArray=[false,true,true];}else if(_this.state.coinArray[1]){tempArray=[false,false,true];}else{tempArray=[false,false,false];}_this.setState({coinArray:tempArray});};_this.correctGuess=function(){var coinCount=_this.state.coins;if(_this.state.startBattle){var _iterator=_createForOfIteratorHelper(_this.state.coinArray),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var coin=_step.value;if(coin)coinCount++;}}catch(err){_iterator.e(err);}finally{_iterator.f();}_this.setState({gameOn:false});setTimeout(function(){_this.setState({coins:coinCount});},2700);}_this.clearBoard();if(_this.state.round<6){setTimeout(function(){_this.updateColorArrayContext();},1500);}else{_this.setState({gameOn:false,startBattle:false});setTimeout(function(){_this.toggleScoringModal();},2000);}};_this.newGame=function(){_this.setState({round:0,coins:0,score:0,timer:15,coinArray:[true,true,true]});_this.toggleStartBattle();_this.startGame();};_this.clearBoard=function(){var clearArray=[];for(var i=0;i<6;i++){clearArray.push({background:\"radial-gradient(circle at 100px 100px, rgb(255, 255, 255, 0.1), #000)\"});}_this.setState({colorArray:clearArray});};_this.updateTimerContext=function(seconds){_this.setState({timer:seconds});setTimeout(function(){_this.setState({score:_this.state.score+seconds});},1700);};_this.updateColorArrayContext=function(){var randomSix=Math.floor(Math.random()*6);var targetArray=['colorOne','colorTwo','colorThree','colorFour','colorFive','colorSix'];var targetId=targetArray[randomSix];var arr=[];if(_this.state.startConvert&&!_this.state.createTriadic&&!_this.state.createAnalogous&&!_this.state.createPastel)arr=generateGhostArray();if(_this.state.startConvert&&_this.state.createTriadic&&!_this.state.createAnalogous&&!_this.state.createPastel)arr=generateTriadicArray();if(_this.state.startConvert&&_this.state.createAnalogous&&!_this.state.createTriadic&&!_this.state.createPastel)arr=generateAnalogousArray();if(_this.state.startConvert&&_this.state.createPastel&&!_this.state.createTriadic&&!_this.state.createAnalogous)arr=generatePastelArray();if(_this.state.startConvert&&_this.state.createCustom)arr=generateCustomArray(_this.state.customColor);if(_this.state.startBattle){_this.state.round<=2?arr=generateEasyArray():arr=generateTriadicArray();}if(!_this.state.startBattle&&!_this.state.startConvert){arr=generateAnalogousArray();}if(_this.state.startBattle){//display target value\nvar targetColor=arr[randomSix];var firstSlice=targetColor.background.slice(42);var colorTarget=firstSlice.slice(0,firstSlice.length-7);_this.setState({coinArray:[true,true,true],round:_this.state.round+1,colorTargetId:targetId,colorTarget:colorTarget,gameOn:true});}_this.setState({colorArray:arr});if(_this.state.repeatRender){setTimeout(function(){_this.clearBoard();},1100);setTimeout(function(){_this.updateColorArrayContext();},2200);}};_this.state={colorArray:battleArray,colorTargetId:'',colorTarget:null,round:0,score:0,timer:15,coins:0,coinArray:[true,true,true],gameOn:false,windowDisplayed:false,customDisplayed:false,customColor:'255, 255, 255',// onLogin: props.onLogin,\nMainModal:false,loginModal:false,bioModal:false,playerPageModal:false,battleInstructionModal:false,convertInstructionModal:false,scoringModal:false,repeatRender:true,startBattle:false,startConvert:false,createTriadic:false,createAnalogous:false,createPastel:false,createCustom:false,toggleMainModal:_this.toggleMainModal,toggleLoginModal:_this.toggleLoginModal,toggleBioModal:_this.toggleBioModal,togglePlayerPageModal:_this.togglePlayerPageModal,toggleBattleInstructionModal:_this.toggleBattleInstructionModal,toggleConvertInstructionModal:_this.toggleConvertInstructionModal,toggleScoringModal:_this.toggleScoringModal,toggleWindowDisplay:_this.toggleWindowDisplay,toggleGameOn:_this.toggleGameOn,toggleStartBattle:_this.toggleStartBattle,toggleStartConvert:_this.toggleStartConvert,toggleRepeatRender:_this.toggleRepeatRender,toggleCreateTriadic:_this.toggleCreateTriadic,toggleCreateAnalogous:_this.toggleCreateAnalogous,toggleCreatePastel:_this.toggleCreatePastel,setCustomColor:_this.setCustomColor,startGame:_this.startGame,correctGuess:_this.correctGuess,updateTimer:_this.updateTimerContext,removeCoin:_this.removeCoin,clearRounds:_this.clearRounds,newGame:_this.newGame};return _this;}_createClass(Controller,[{key:\"componentDidMount\",value:function componentDidMount(){this.toggleCreateAnalogous();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"gameBoardDiv\",value:this.state,children:/*#__PURE__*/_jsx(ColorContext.Provider,{value:this.state,children:/*#__PURE__*/_jsxs(ModalProvider,{children:[/*#__PURE__*/_jsx(Backdrop,{}),this.state.MainModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(MainModal,{})}),this.state.loginModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(LoginModal,{})}),this.state.bioModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(MyBioModal,{})}),this.state.playerPageModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(PlayerPageModal,{})}),this.state.battleInstructionModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(BattleInstructionModal,{})}),this.state.convertInstructionModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(ConvertInstructionModal,{})}),this.state.scoringModal&&/*#__PURE__*/_jsx(Modal,{children:/*#__PURE__*/_jsx(ScoringModal,{})})]})})});}}]);return Controller;}(React.Component);export default Controller;","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Controller.js"],"names":["React","generateEasyArray","generateTriadicArray","generateAnalogousArray","generateGhostArray","generatePastelArray","generateCustomArray","Backdrop","ColorContext","MainModal","LoginModal","PlayerPageModal","MyBioModal","BattleInstructionModal","ConvertInstructionModal","ScoringModal","Modal","ModalProvider","Controller","props","battleArray","toggleMainModal","setState","repeatRender","createAnalogous","state","coinArray","round","coins","score","timer","toggleLoginModal","loginModal","toggleBioModal","bioModal","togglePlayerPageModal","playerPageModal","toggleBattleInstructionModal","battleInstructionModal","toggleConvertInstructionModal","convertInstructionModal","toggleScoringModal","scoringModal","toggleGameOn","gameOn","toggleWindowDisplay","windowDisplayed","toggleCustomDisplay","customDisplayed","clearRounds","toggleRepeatRender","createPastel","createTriadic","toggleCreateAnalogous","clearBoard","setTimeout","updateColorArrayContext","toggleCreatePastel","toggleCreateTriadic","setCustomColor","custom","createCustom","customColor","toggleStartBattle","startConvert","toggleStartConvert","startBattle","startGame","timeout","removeCoin","tempArray","correctGuess","coinCount","coin","newGame","clearArray","i","push","background","colorArray","updateTimerContext","seconds","randomSix","Math","floor","random","targetArray","targetId","arr","targetColor","firstSlice","slice","colorTarget","length","colorTargetId","updateTimer","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n    generateEasyArray,\n    generateTriadicArray,\n    generateAnalogousArray,\n    generateGhostArray,\n    generatePastelArray,\n    generateCustomArray,\n} from './PureFunctions';\n\nimport Backdrop from './Components/Backdrop/Backdrop'\nimport ColorContext from './ColorContext';\nimport MainModal from './Components/Modals/MainModal';\nimport LoginModal from './Components/Modals/LoginFormModal';\nimport PlayerPageModal from './Components/Modals/PlayerPageModal';\nimport MyBioModal from './Components/Modals/MyBioModal';\nimport BattleInstructionModal from './Components/Modals/BattleInstructionModal'\nimport ConvertInstructionModal from './Components/Modals/ConvertInstructionModal'\nimport ScoringModal from './Components/Modals/ScoringModal'\nimport { Modal } from './ModalContext/Modal';\nimport { ModalProvider } from './ModalContext/Modal';\n\nclass Controller extends React.Component {\n    constructor (props) {\n        const battleArray = generateAnalogousArray();\n\n        super (props);\n        this.state = {\n            colorArray: battleArray,\n            colorTargetId: '',\n            colorTarget: null,\n            round: 0,\n            score: 0,\n            timer: 15,\n            coins: 0,\n            coinArray: [true, true, true],\n            gameOn: false,\n            windowDisplayed: false,\n            customDisplayed: false,\n            customColor: '255, 255, 255',\n\n            // onLogin: props.onLogin,\n            MainModal: false,\n            loginModal: false,\n            bioModal: false,\n            playerPageModal: false,\n            battleInstructionModal: false,\n            convertInstructionModal: false,\n            scoringModal: false,\n            repeatRender: true,\n\n            startBattle: false,\n            startConvert: false,\n\n            createTriadic: false,\n            createAnalogous: false,\n            createPastel: false,\n            createCustom: false,\n\n            toggleMainModal: this.toggleMainModal,\n            toggleLoginModal: this.toggleLoginModal,\n            toggleBioModal: this.toggleBioModal,\n            togglePlayerPageModal: this.togglePlayerPageModal,\n            toggleBattleInstructionModal: this.toggleBattleInstructionModal,\n            toggleConvertInstructionModal: this.toggleConvertInstructionModal,\n            toggleScoringModal: this.toggleScoringModal,\n\n            toggleWindowDisplay: this.toggleWindowDisplay,\n\n            toggleGameOn: this.toggleGameOn,\n            toggleStartBattle: this.toggleStartBattle,\n            toggleStartConvert: this.toggleStartConvert,\n            toggleRepeatRender: this.toggleRepeatRender,\n\n            toggleCreateTriadic: this.toggleCreateTriadic,\n            toggleCreateAnalogous: this.toggleCreateAnalogous,\n            toggleCreatePastel: this.toggleCreatePastel,\n            setCustomColor: this.setCustomColor,\n\n            startGame: this.startGame,\n            correctGuess: this.correctGuess,\n            updateTimer: this.updateTimerContext,\n            removeCoin: this.removeCoin,\n            clearRounds: this.clearRounds,\n            newGame: this.newGame\n        }\n    }\n\n    componentDidMount() {this.toggleCreateAnalogous()}\n\n    toggleMainModal = () => {\n        this.setState({\n            repeatRender: false,\n            createAnalogous: false,\n            MainModal: !this.state.MainModal,\n            coinArray: [true, true, true],\n            round: 0,\n            coins: 0,\n            score: 0,\n            timer: 15\n        })\n    }\n\n    toggleLoginModal = () => this.setState({ loginModal: !this.state.loginModal })\n    toggleBioModal = () => this.setState({ bioModal: !this.state.bioModal })\n    togglePlayerPageModal = () => this.setState({ playerPageModal: !this.state.playerPageModal })\n    toggleBattleInstructionModal = () => this.setState({ battleInstructionModal: !this.state.battleInstructionModal })\n    toggleConvertInstructionModal = () => this.setState({ convertInstructionModal: !this.state.convertInstructionModal })\n    toggleScoringModal = () => this.setState({ scoringModal: !this.state.scoringModal});\n\n    toggleGameOn = () => this.setState({ gameOn: false })\n    toggleWindowDisplay = () => this.setState({ windowDisplayed: !this.state.windowDisplayed})\n    toggleCustomDisplay = () => this.setState({ customDisplayed: !this.state.customDisplayed})\n    clearRounds = () => this.setState({ round: 0})\n\n    toggleRepeatRender = () => {\n        if (this.state.repeatRender) {\n            this.setState({\n                createPastel: false,\n                createTriadic: false,\n                createAnalogous: false,\n                repeatRender: false\n            })\n        } else {\n            this.setState({\n                repeatRender: true\n            })\n        }\n    }\n\n    toggleCreateAnalogous = () => {\n        this.setState({ createAnalogous: true});\n        this.clearBoard();\n        setTimeout(() => {\n            this.updateColorArrayContext();\n            if (!this.state.repeatRender) {\n                this.setState({ createAnalogous: false})\n            }\n        }, 1100)\n    }\n\n    toggleCreatePastel = () => {\n        this.setState({ createPastel: true});\n        this.clearBoard();\n        setTimeout(() => {\n            this.updateColorArrayContext();\n            if (!this.state.repeatRender) {\n                this.setState({ createPastel: false})\n            }\n        }, 1100)\n    }\n\n    toggleCreateTriadic = () => {\n        this.setState({ createTriadic: true});\n        this.clearBoard();\n        setTimeout(() => {\n            this.updateColorArrayContext();\n            if (!this.state.repeatRender) {\n                this.setState({ createTriadic: false});\n            }\n        }, 1100)\n    }\n\n    setCustomColor = (custom) => {\n        this.setState({\n            createCustom: true,\n            customColor: custom,\n        });\n        this.clearBoard();\n        setTimeout(() => {\n            this.updateColorArrayContext();\n            this.setState({\n                customDisplayed: true,\n                createCustom: false\n            });\n        }, 1100)\n        setTimeout(() => {\n            this.setState({\n                customDisplayed: false\n            })\n        }, 3100)\n    }\n\n    toggleStartBattle = () => {\n        if (this.state.startConvert) this.toggleStartConvert();\n        this.setState({ startBattle: !this.state.startBattle });\n    }\n\n    toggleStartConvert = () => {\n        if (this.state.startBattle) this.toggleStartBattle();\n        this.setState({ startConvert: !this.state.startConvert});\n    }\n\n    startGame = () => {\n        this.clearBoard();\n        this.timeout = setTimeout(() => {\n            this.setState({ gameOn: true })\n            this.updateColorArrayContext()\n        }, 1100)\n    }\n\n    removeCoin = () => {\n        let tempArray = [];\n        if (this.state.coinArray[0]) {\n            tempArray = [false, true, true]\n        } else if (this.state.coinArray[1]) {\n            tempArray = [false, false, true]\n        } else {\n            tempArray = [false, false, false]\n        }\n        this.setState ({ coinArray: tempArray })\n    }\n\n    correctGuess = () => {\n        let coinCount = this.state.coins;\n\n        if (this.state.startBattle) {\n            for (let coin of this.state.coinArray) {\n                if (coin) coinCount++\n            }\n\n            this.setState({ gameOn: false });\n            setTimeout(() => {\n                this.setState({ coins: coinCount })\n            }, 2700)\n        }\n\n        this.clearBoard();\n        if (this.state.round < 6) {\n            setTimeout(() => {\n                this.updateColorArrayContext();\n            }, 1500)\n        } else {\n            this.setState({\n                gameOn: false,\n                startBattle: false\n            })\n            setTimeout(() => {\n                this.toggleScoringModal()\n            }, 2000)\n        }\n    }\n\n    newGame = () => {\n        this.setState({\n            round: 0,\n            coins: 0,\n            score: 0,\n            timer: 15,\n            coinArray: [true, true, true]\n        })\n        this.toggleStartBattle();\n        this.startGame();\n    }\n\n    clearBoard = () => {\n        let clearArray = []\n        for (let i = 0; i < 6; i++) {\n            clearArray.push({ background:\n                `radial-gradient(circle at 100px 100px, rgb(255, 255, 255, 0.1), #000)`\n            })\n        }\n        this.setState({\n            colorArray: clearArray,\n        })\n    }\n\n    updateTimerContext = (seconds) => {\n        this.setState({ timer: seconds })\n        setTimeout(() => {\n            this.setState({ score: this.state.score + seconds })\n        }, 1700)\n    }\n\n    updateColorArrayContext = () => {\n        let randomSix = Math.floor(Math.random() * 6)\n        let targetArray = [\n            'colorOne',\n            'colorTwo',\n            'colorThree',\n            'colorFour',\n            'colorFive',\n            'colorSix'\n        ]\n        let targetId = targetArray[randomSix];\n        let arr = [];\n\n        if (this.state.startConvert &&\n            !this.state.createTriadic &&\n            !this.state.createAnalogous &&\n            !this.state.createPastel)\n                arr = generateGhostArray();\n\n        if (this.state.startConvert &&\n            this.state.createTriadic &&\n            !this.state.createAnalogous &&\n            !this.state.createPastel)\n                arr = generateTriadicArray();\n\n        if (this.state.startConvert &&\n            this.state.createAnalogous &&\n            !this.state.createTriadic &&\n            !this.state.createPastel)\n                arr = generateAnalogousArray();\n\n        if (this.state.startConvert &&\n            this.state.createPastel &&\n            !this.state.createTriadic &&\n            !this.state.createAnalogous)\n                arr = generatePastelArray();\n\n        if (this.state.startConvert &&\n            this.state.createCustom)\n                arr = generateCustomArray(this.state.customColor);\n\n        if (this.state.startBattle) {\n            this.state.round <= 2\n                ? arr = generateEasyArray()\n                : arr = generateTriadicArray()\n        }\n\n\n        if (!this.state.startBattle &&\n            !this.state.startConvert) {\n                arr = generateAnalogousArray()\n        }\n\n\n        if (this.state.startBattle) {\n            //display target value\n            const targetColor = arr[randomSix]\n            const firstSlice = (targetColor.background.slice(42))\n            let colorTarget = (firstSlice.slice(0, firstSlice.length -7))\n\n            this.setState({\n                coinArray: [true, true, true],\n                round: this.state.round + 1,\n                colorTargetId: targetId,\n                colorTarget: colorTarget,\n                gameOn: true,\n            })\n        }\n\n        this.setState({\n            colorArray: arr,\n        });\n\n        if (this.state.repeatRender) {\n            setTimeout(() => {\n                this.clearBoard();\n            }, 1100)\n            setTimeout(() => {\n                this.updateColorArrayContext();\n            }, 2200)\n        }\n    }\n\n    render() {\n        return (\n            <div className='gameBoardDiv' value={this.state}>\n                <ColorContext.Provider value={this.state}>\n                    <ModalProvider>\n                        <Backdrop />\n\n                        {/* Modal Control */}\n                        {this.state.MainModal &&\n                            <Modal >\n                                <MainModal />\n                            </Modal>\n                        }\n                        {this.state.loginModal &&\n                            <Modal>\n                                <LoginModal />\n                            </Modal>\n                        }\n                        {this.state.bioModal &&\n                            <Modal>\n                                <MyBioModal />\n                            </Modal>\n                        }\n                        {this.state.playerPageModal &&\n                            <Modal>\n                                <PlayerPageModal />\n                            </Modal>\n                        }\n                        {this.state.battleInstructionModal &&\n                            <Modal>\n                                <BattleInstructionModal />\n                            </Modal>\n                        }\n                        {this.state.convertInstructionModal &&\n                            <Modal>\n                                <ConvertInstructionModal />\n                            </Modal>\n                        }\n                        {this.state.scoringModal &&\n                            <Modal >\n                                <ScoringModal />\n                            </Modal>\n                        }\n                    </ModalProvider>\n                </ColorContext.Provider>\n            </div>\n        )\n    }\n}\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}