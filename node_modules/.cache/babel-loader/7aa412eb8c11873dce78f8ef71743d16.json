{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/LoginFormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\"; // import { useDispatch } from \"react-redux\";\n// import * as sessionActions from \"../../store/session\";\n\nimport SignUpForm from '../SignupFormPage/SignUpFormPage';\nimport KarenContext from '../../KarenContext';\nimport './LogInFormModal.css';\n\nfunction LoginForm() {\n  _s();\n\n  const values = useContext(KarenContext); // const dispatch = useDispatch();\n  // const [credential, setCredential] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setErrors([]);\n  //   return dispatch(sessionActions.login({ credential, password })).catch(\n  //     (res) => {\n  //       if (res.data && res.data.errors) setErrors(res.data.errors);\n  //     }\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logInFormDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logSignTitle logTitle\",\n          children: \"LogIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thisBioLink\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"monkeyPic\",\n            onClick: () => {\n              values.toggleLoginModal();\n              values.toggleBioModal();\n            },\n            children: \"Bio Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"meetDevText thisDevText\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"arrowSpan\",\n              children: \"\\u279B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 53\n            }, this), \"Meet the developer!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signUpFormDiv\",\n        children: /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playerPageButton\",\n        onClick: () => {\n          values.toggleLoginModal();\n          values.togglePlayerPageModal();\n        },\n        children: \"Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"CCktCQUXVHOcUIrlvyB41gXaY/Q=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/LoginFormModal.js"],"names":["React","useContext","useState","SignUpForm","KarenContext","LoginForm","values","toggleLoginModal","toggleBioModal","togglePlayerPageModal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;AAEA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,OAAO,sBAAP;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,MAAM,GAAGL,UAAU,CAACG,YAAD,CAAzB,CADmB,CAEnB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA8BE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,OAAO,EAAE,MAAM;AACtCE,cAAAA,MAAM,CAACC,gBAAP;AACAD,cAAAA,MAAM,CAACE,cAAP;AACH,aAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAI,YAAA,SAAS,EAAC,yBAAd;AAAA,oCAAwC;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuCE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvCF,eA0CE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAE,MAAM;AAClDF,UAAAA,MAAM,CAACC,gBAAP;AACAD,UAAAA,MAAM,CAACG,qBAAP;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAmDD;;GApEQJ,S;;KAAAA,S;AAsET,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n\n// import * as sessionActions from \"../../store/session\";\nimport SignUpForm from '../SignupFormPage/SignUpFormPage'\nimport KarenContext from '../../KarenContext'\n\nimport './LogInFormModal.css'\n\nfunction LoginForm() {\n  const values = useContext(KarenContext)\n  // const dispatch = useDispatch();\n  // const [credential, setCredential] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   setErrors([]);\n  //   return dispatch(sessionActions.login({ credential, password })).catch(\n  //     (res) => {\n  //       if (res.data && res.data.errors) setErrors(res.data.errors);\n  //     }\n  //   );\n  // };\n\n  return (\n    <>\n    <div className='fullDiv'>\n      <div className='logInFormDiv'>\n        <h1 className='logSignTitle logTitle'>LogIn</h1>\n        {/* <form className='loginForm' onSubmit={handleSubmit}>\n          {<ul>\n            {errors.map((error, idx) => (\n              <li key={idx}>{error}</li>\n            ))}\n          </ul>}\n            <input\n              className='logInput'\n              placeholder='Player Name'\n              type=\"text\"\n              value={credential}\n              onChange={(e) => setCredential(e.target.value)}\n              required\n            />\n            <input\n              className='logInput'\n              placeholder='Password'\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <button className='logSignButton' type=\"submit\">LogIn</button>\n              <button  className='backButton' onClick={() => {\n              values.toggleInstructionModal();\n              values.toggleLoginModal();\n            }}>Back</button>\n        </form> */}\n        <div className='thisBioLink'>\n            <div className='monkeyPic' onClick={() => {\n                values.toggleLoginModal();\n                values.toggleBioModal();\n            }}>Bio Page</div>\n            <h1 className='meetDevText thisDevText'><div className='arrowSpan'>âž›</div>Meet the developer!</h1>\n        </div>\n      </div>\n      <div className='signUpFormDiv'>\n        <SignUpForm />\n      </div>\n      <button className='playerPageButton' onClick={() => {\n        values.toggleLoginModal();\n        values.togglePlayerPageModal();\n      }}>Player</button>\n    </div>\n    </>\n  )\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}