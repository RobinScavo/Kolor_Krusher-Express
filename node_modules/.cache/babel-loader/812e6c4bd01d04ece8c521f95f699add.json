{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/SignupFormPage/SignUpFormPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\"; // import { useStorageState } from \"react-storage-hooks\";\n\nimport UserContext from \"../../context/UserContext\";\n\nfunction SignupFormPage() {\n  _s();\n\n  const {\n    onSignup,\n    setFlashMessage\n  } = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // const [score, setScore] = useState(0);\n  // const [error, setError] = useState('')\n\n  function validateEmail(emailAddress) {\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (emailAddress.match(regexEmail)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  let emailAdress = \"test@gmail.com\";\n  console.log(validateEmail(emailAdress));\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (password !== confirmPassword) return setFlashMessage('mismatched');\n    if (password.length < 6 || password.length > 15) return setFlashMessage('improperlyPaswworded');\n    if (username.length < 3 || username.length > 15) return setFlashMessage('improperlyNamed');\n    if (!validateEmail(email)) return setFlashMessage('improperlyEmailed');\n    onSignup(email, password, username, 0);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"logSignTitle\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value.toLowerCase()),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Player Name\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signUpButton\",\n      className: \"silverButton\",\n      type: \"submit\",\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupFormPage, \"++VtU9qur2BjL6Weu1OaMSZJPp4=\");\n\n_c = SignupFormPage;\nexport default SignupFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/SignupFormPage/SignUpFormPage.js"],"names":["React","useState","useContext","UserContext","SignupFormPage","onSignup","setFlashMessage","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","validateEmail","emailAddress","regexEmail","match","emailAdress","console","log","handleSubmit","e","preventDefault","length","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n// import { useStorageState } from \"react-storage-hooks\";\n\nimport UserContext from \"../../context/UserContext\";\n\nfunction SignupFormPage() {\n  const { onSignup, setFlashMessage } = useContext(UserContext)\n\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [score, setScore] = useState(0);\n  // const [error, setError] = useState('')\n\n  function validateEmail (emailAddress)\n{\n  let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (emailAddress.match(regexEmail)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nlet emailAdress = \"test@gmail.com\";\nconsole.log(validateEmail(emailAdress));\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (password !== confirmPassword) return setFlashMessage('mismatched');\n    if (password.length < 6 || password.length > 15) return setFlashMessage('improperlyPaswworded');\n    if (username.length < 3 || username.length > 15) return setFlashMessage('improperlyNamed');\n    if (!validateEmail(email)) return setFlashMessage('improperlyEmailed')\n\n\n    onSignup(email, password, username, 0)\n  };\n\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <h1 className='logSignTitle'>Sign Up</h1>\n\n      <label className='signUpLabel'>\n        <input\n          placeholder='Email'\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value.toLowerCase())}\n          required\n        />\n      </label>\n\n      <label className='signUpLabel'>\n        <input\n          placeholder='Player Name'\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </label>\n\n      <label className='signUpLabel'>\n        <input\n          placeholder='Password'\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n\n      <label className='signUpLabel'>\n        <input\n          placeholder='Confirm Password'\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n        />\n      </label>\n\n      <button\n        id='signUpButton'\n        className='silverButton'\n        type=\"submit\"\n      >SignUp</button>\n\n    </form>\n  );\n}\n\nexport default SignupFormPage;\n"]},"metadata":{},"sourceType":"module"}