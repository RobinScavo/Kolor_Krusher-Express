{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/SignupFormPage/SignUpFormPage.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\"; // import * as sessionActions from \"../../store/session\";\n\nimport './SignupForm.css';\n\nfunction SignupFormPage() {\n  // const dispatch = useDispatch();\n  // const sessionUser = useSelector((state) => state.session.user);\n  // const [email, setEmail] = useState(\"\");\n  // const [username, setUsername] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n  // if (sessionUser) return <Redirect to=\"/\" />;\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (password === confirmPassword) {\n  //     setErrors([]);\n  //     return dispatch(sessionActions.signup({ email, username, password }))\n  //       .catch(res => {\n  //         if (res.data && res.data.errors) setErrors(res.data.errors);\n  //       });\n  //   }\n  //   return setErrors(['Confirm Password field must be the same as the Password field']);\n  // };\n  // onSubmit={handleSubmit}\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"logSignTitle\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\" // value={email}\n        // onChange={(e) => setEmail(e.target.value)}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Player Name\",\n        type: \"text\" // value={username}\n        // onChange={(e) => setUsername(e.target.value)}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\" // value={password}\n        // onChange={(e) => setPassword(e.target.value)}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"signUpLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Confirm Password\",\n        type: \"password\" // value={confirmPassword}\n        // onChange={(e) => setConfirmPassword(e.target.value)}\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"signUpButton\",\n      className: \"silverButton\",\n      type: \"submit\",\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SignupFormPage;\nexport default SignupFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/SignupFormPage/SignUpFormPage.js"],"names":["React","useState","useDispatch","useSelector","Redirect","SignupFormPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AAEA,OAAO,kBAAP;;AAEA,SAASC,cAAT,GAA0B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,IAAI,EAAC,MAFP,CAGE;AACA;AAJF;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAcE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,IAAI,EAAC,MAFP,CAGE;AACA;AAJF;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAuBE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,IAAI,EAAC,UAFP,CAGE;AACA;AAJF;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF,eAgCE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,6BACE;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,IAAI,EAAC,UAFP,CAGE;AACA;AAJF;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF,eAyCE;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,SAAS,EAAC,cAApC;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;KAtEQA,c;AAwET,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\n// import * as sessionActions from \"../../store/session\";\n\nimport './SignupForm.css'\n\nfunction SignupFormPage() {\n  // const dispatch = useDispatch();\n  // const sessionUser = useSelector((state) => state.session.user);\n  // const [email, setEmail] = useState(\"\");\n  // const [username, setUsername] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\n  // const [errors, setErrors] = useState([]);\n\n  // if (sessionUser) return <Redirect to=\"/\" />;\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (password === confirmPassword) {\n  //     setErrors([]);\n  //     return dispatch(sessionActions.signup({ email, username, password }))\n  //       .catch(res => {\n  //         if (res.data && res.data.errors) setErrors(res.data.errors);\n  //       });\n  //   }\n  //   return setErrors(['Confirm Password field must be the same as the Password field']);\n  // };\n\n  // onSubmit={handleSubmit}\n\n  return (\n    <form className='form' >\n      <h1 className='logSignTitle'>Sign Up</h1>\n      {/* <ul className='errors'>\n        {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n      </ul> */}\n      <label className='signUpLabel'>\n        <input\n          placeholder='Email'\n          type=\"text\"\n          // value={email}\n          // onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </label>\n      <label className='signUpLabel'>\n        <input\n          placeholder='Player Name'\n          type=\"text\"\n          // value={username}\n          // onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </label>\n      <label className='signUpLabel'>\n        <input\n          placeholder='Password'\n          type=\"password\"\n          // value={password}\n          // onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <label className='signUpLabel'>\n        <input\n          placeholder='Confirm Password'\n          type=\"password\"\n          // value={confirmPassword}\n          // onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button id='signUpButton' className='silverButton' type=\"submit\">SignUp</button>\n    </form>\n  );\n}\n\nexport default SignupFormPage;\n"]},"metadata":{},"sourceType":"module"}