{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/RGBboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport KarenContext from '../../KarenContext';\nimport ColorBall from './ColorBall';\nimport './RGBboard.css';\n\nconst RGBboard = () => {\n  _s();\n\n  const values = useContext(KarenContext);\n  const arr = values.colorArray;\n  const target = values.colorTargetId; // let kernelLength = values.zenKernel.length;\n  // let kernelClassLength = 'shortKernel';\n\n  let visibility = 'visible'; // let kernelVisibility = values.kernelVisibility ? 'flashKernel' : '';\n  //Arrays for ColorBall map\n\n  let idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n  let delayArray = [0, 750, 600, 450, 300, 150];\n  let indexArray = [0, 1, 2, 3, 4, 5]; // Ghost-ball effect when clearing board\n\n  if (!values.gameOn && values.round > 0) visibility = 'hidden'; //Adjust font for kernel length\n  // if (kernelLength > 35 && kernelLength < 50) {\n  //     kernelClassLength = 'longKernel'\n  // } else if  (kernelLength > 50) {\n  //     kernelClassLength = 'realLongKernel'\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lipDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plateDiv\",\n      children: [indexArray.map(index => /*#__PURE__*/_jsxDEV(ColorBall, {\n        id: idArray[index],\n        color: arr[index],\n        delay: delayArray[index],\n        blurred: arr[index].class,\n        visibility: visibility,\n        target: target,\n        correctGuess: values.correctGuess,\n        removeCoin: values.removeCoin,\n        gameOn: values.gameOn,\n        startConvert: values.startConvert\n      }, idArray[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"targetColorDiv\",\n        children: [!values.gameOn && values.round === 0 && !values.instructionModal && !values.startConvert && !values.startBattle && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startButton\",\n          onClick: () => {\n            values.toggleMainModal();\n          },\n          children: \"START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), values.startConvert && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"startButton\",\n          onClick: () => {\n            values.correctGuess();\n          },\n          children: \"Klear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), values.startBattle && values.gameOn && values.startBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorText\",\n            children: \"RGB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: values.colorTarget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), values.startBattle && !values.gameOn && values.round > 0 && !values.startZen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"targetDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"colorNumber\",\n            children: \"CORRECT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RGBboard, \"CCktCQUXVHOcUIrlvyB41gXaY/Q=\");\n\n_c = RGBboard;\nexport default RGBboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RGBboard\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/RGBboard.js"],"names":["React","useContext","KarenContext","ColorBall","RGBboard","values","arr","colorArray","target","colorTargetId","visibility","idArray","delayArray","indexArray","gameOn","round","map","index","class","correctGuess","removeCoin","startConvert","instructionModal","startBattle","toggleMainModal","colorTarget","startZen"],"mappings":"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","sourcesContent":["import React, { useContext} from 'react';\n\nimport KarenContext from '../../KarenContext';\nimport ColorBall from './ColorBall';\n\nimport './RGBboard.css'\n\nconst RGBboard = () => {\n    const values = useContext(KarenContext)\n    const arr = values.colorArray;\n    const target = values.colorTargetId;\n    // let kernelLength = values.zenKernel.length;\n    // let kernelClassLength = 'shortKernel';\n    let visibility = 'visible';\n    // let kernelVisibility = values.kernelVisibility ? 'flashKernel' : '';\n\n    //Arrays for ColorBall map\n    let idArray = ['colorOne', 'colorTwo', 'colorThree', 'colorFour', 'colorFive', 'colorSix'];\n    let delayArray =[0, 750, 600, 450, 300, 150];\n    let indexArray = [0, 1, 2, 3, 4, 5]\n\n    // Ghost-ball effect when clearing board\n    if (!values.gameOn && values.round > 0) visibility = 'hidden';\n\n    //Adjust font for kernel length\n    // if (kernelLength > 35 && kernelLength < 50) {\n    //     kernelClassLength = 'longKernel'\n    // } else if  (kernelLength > 50) {\n    //     kernelClassLength = 'realLongKernel'\n    // }\n\n    return (\n        <div className='lipDiv'>\n            <div className='plateDiv' >\n                {/* Set the balls */}\n                {indexArray.map(index => (\n                    <ColorBall\n                        key={idArray[index]}\n                        id={idArray[index]}\n                        color={arr[index]}\n                        delay={delayArray[index]}\n                        blurred={arr[index].class}\n                        visibility={visibility}\n                        target={target}\n                        correctGuess={values.correctGuess}\n                        removeCoin={values.removeCoin}\n                        gameOn={values.gameOn}\n                        startConvert={values.startConvert}\n                    />\n                ))}\n                <div className='targetColorDiv' >\n                    {/* Start button */}\n                    {!values.gameOn && values.round === 0 && !values.instructionModal && !values.startConvert && !values.startBattle &&\n                        <button className='startButton' onClick={() => {\n                            values.toggleMainModal()\n                        }}>START</button>\n                    }\n                    {/* Clear button */}\n                    {values.startConvert &&\n                        <button className='startButton' onClick={() => {\n                            values.correctGuess()\n                        }}>Klear</button>\n                    }\n                    {/* Target color */}\n                    {values.startBattle && values.gameOn && values.startBattle &&\n                        <div className='targetDiv'>\n                            <h2 className='colorText'>RGB</h2>\n                            <h2 className='colorNumber'>{values.colorTarget}</h2>\n                        </div>\n                    }\n                    {values.startBattle && !values.gameOn && values.round > 0 && !values.startZen &&\n                        <div className='targetDiv'>\n                            <h2 className='colorNumber'>CORRECT</h2>\n                        </div>\n                    }\n                    {/* {values.startZen &&\n                        <div className='targetDiv'>\n                            <div className='kernelDiv'>\n                                <h2 className={`${kernelClassLength} ${kernelVisibility}`}>{values.zenKernel}</h2>\n                            </div>\n                        </div>\n                    } */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RGBboard;\n"]},"metadata":{},"sourceType":"module"}