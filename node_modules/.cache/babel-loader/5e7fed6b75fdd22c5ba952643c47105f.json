{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/ColorBall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './ColorBall.css';\n\nconst ColorBall = props => {\n  _s();\n\n  const target = props.target;\n  const startConvert = props.startConvert;\n  const [visibility, setVisibility] = useState(props.visibility);\n  const [validTarget, setValidTarget] = useState(true);\n  const [color, setColor] = useState(props.color);\n  const [id, setId] = useState(props.id);\n\n  const checkGuess = id => {\n    if (!props.gameOn) return;\n    if (startConvert) return;\n\n    if (target === id) {\n      // this.setState({color: {}})\n      setColor({});\n      props.correctGuess();\n      return;\n    } else {\n      setVisibility('hidden');\n      setValidTarget(false);\n      setColor({}); // this.setState({\n      //     color: {},\n      //     visibility: 'hidden',\n      //     validTarget: false,\n      // })\n    }\n\n    if (validTarget) {\n      props.removeCoin();\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setVisibility(props.visibility);\n      setColor(props.color);\n      setId(props.id);\n    }, props.delay);\n  }, [props.color, props.id, props.visibility, props.delay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `colorBall ${visibility} ${props.blurred}`,\n    id: id,\n    onClick: () => checkGuess(props.id),\n    style: color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}; // class ColorBall extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             color: props.color,\n//             id: props.id,\n//             visibility: props.visibility,\n//             target: null,\n//             gameOn: false,\n//             validTarget: true,\n//             blurred: 'blurred',\n//             startConvert: props.startConvert,\n//             delay: props.delay,\n//             correctGuess: props.correctGuess,\n//             removeCoin: props.removeCoin\n//         }\n//     }\n//     componentDidUpdate(prevProps) {\n//         if (prevProps.color !== this.props.color) {\n//             this.timeout = setTimeout(() => {\n//                 this.setState({\n//                     id: this.props.id,\n//                     target: this.props.target,\n//                     visibility: this.props.visibility,\n//                     color: this.props.color,\n//                     validTarget: true,\n//                     startConvert: this.props.startConvert,\n//                 })\n//             }, this.state.delay)\n//         }\n//         if (prevProps.gameOn !== this.props.gameOn) {\n//             this.setState({\n//                 gameOn: this.props.gameOn\n//             })\n//         }\n//     }\n//     render() {\n//         return (\n//         <div\n//             className={`colorBall ${this.state.visibility} ${this.state.blurred}`}\n//             id={this.state.id}\n//             onClick={() => this.checkGuess(this.state.id)}\n//             style={this.state.color}\n//         >\n//         </div>\n//         )\n//     }\n// }\n\n\n_s(ColorBall, \"6uKCeXVhM4qDpsDlt7ogKHjT+Pc=\");\n\n_c = ColorBall;\nexport default ColorBall;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorBall\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/RGB/ColorBall.js"],"names":["React","useState","useEffect","ColorBall","props","target","startConvert","visibility","setVisibility","validTarget","setValidTarget","color","setColor","id","setId","checkGuess","gameOn","correctGuess","removeCoin","setTimeout","delay","blurred"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,YAAY,GAAGF,KAAK,CAACE,YAA3B;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACG,KAAK,CAACG,UAAP,CAA5C;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACG,KAAK,CAACO,KAAP,CAAlC;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAACG,KAAK,CAACS,EAAP,CAA5B;;AAEA,QAAME,UAAU,GAAIF,EAAD,IAAQ;AACvB,QAAI,CAACT,KAAK,CAACY,MAAX,EAAmB;AACnB,QAAIV,YAAJ,EAAkB;;AAClB,QAAID,MAAM,KAAKQ,EAAf,EAAmB;AACf;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAR,MAAAA,KAAK,CAACa,YAAN;AACA;AACH,KALD,MAKO;AACHT,MAAAA,aAAa,CAAC,QAAD,CAAb;AACAE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR,CAHG,CAKH;AACA;AACA;AACA;AACA;AACH;;AACD,QAAIH,WAAJ,EAAiB;AACbL,MAAAA,KAAK,CAACc,UAAN;AACH;AACJ,GAtBD;;AAwBAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,UAAU,CAAC,MAAM;AACbX,MAAAA,aAAa,CAACJ,KAAK,CAACG,UAAP,CAAb;AACAK,MAAAA,QAAQ,CAACR,KAAK,CAACO,KAAP,CAAR;AACAG,MAAAA,KAAK,CAACV,KAAK,CAACS,EAAP,CAAL;AACH,KAJS,EAIPT,KAAK,CAACgB,KAJC,CAAV;AAKH,GANQ,EAMN,CAAChB,KAAK,CAACO,KAAP,EAAcP,KAAK,CAACS,EAApB,EAAwBT,KAAK,CAACG,UAA9B,EAA0CH,KAAK,CAACgB,KAAhD,CANM,CAAT;AAQA,sBACI;AACI,IAAA,SAAS,EAAG,aAAYb,UAAW,IAAGH,KAAK,CAACiB,OAAQ,EADxD;AAEI,IAAA,EAAE,EAAER,EAFR;AAGI,IAAA,OAAO,EAAE,MAAME,UAAU,CAACX,KAAK,CAACS,EAAP,CAH7B;AAII,IAAA,KAAK,EAAEF;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlDD,C,CAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxGMR,S;;KAAAA,S;AA0GN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './ColorBall.css'\n\nconst ColorBall = (props) => {\n    const target = props.target;\n    const startConvert = props.startConvert;\n\n    const [visibility, setVisibility] = useState(props.visibility);\n    const [validTarget, setValidTarget] = useState(true);\n    const [color, setColor] = useState(props.color);\n    const [id, setId] = useState(props.id)\n\n    const checkGuess = (id) => {\n        if (!props.gameOn) return;\n        if (startConvert) return;\n        if (target === id) {\n            // this.setState({color: {}})\n            setColor({})\n            props.correctGuess();\n            return;\n        } else {\n            setVisibility('hidden')\n            setValidTarget(false);\n            setColor({})\n\n            // this.setState({\n            //     color: {},\n            //     visibility: 'hidden',\n            //     validTarget: false,\n            // })\n        }\n        if (validTarget) {\n            props.removeCoin()\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            setVisibility(props.visibility);\n            setColor(props.color);\n            setId(props.id);\n        }, props.delay)\n    }, [props.color, props.id, props.visibility, props.delay])\n\n    return (\n        <div\n            className={`colorBall ${visibility} ${props.blurred}`}\n            id={id}\n            onClick={() => checkGuess(props.id)}\n            style={color}\n        >\n        </div>\n    )\n}\n\n// class ColorBall extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             color: props.color,\n//             id: props.id,\n//             visibility: props.visibility,\n//             target: null,\n//             gameOn: false,\n//             validTarget: true,\n//             blurred: 'blurred',\n//             startConvert: props.startConvert,\n//             delay: props.delay,\n\n//             correctGuess: props.correctGuess,\n//             removeCoin: props.removeCoin\n//         }\n//     }\n\n//     componentDidUpdate(prevProps) {\n//         if (prevProps.color !== this.props.color) {\n//             this.timeout = setTimeout(() => {\n//                 this.setState({\n//                     id: this.props.id,\n//                     target: this.props.target,\n//                     visibility: this.props.visibility,\n//                     color: this.props.color,\n//                     validTarget: true,\n//                     startConvert: this.props.startConvert,\n//                 })\n//             }, this.state.delay)\n//         }\n//         if (prevProps.gameOn !== this.props.gameOn) {\n//             this.setState({\n//                 gameOn: this.props.gameOn\n//             })\n//         }\n//     }\n\n\n\n//     render() {\n//         return (\n//         <div\n//             className={`colorBall ${this.state.visibility} ${this.state.blurred}`}\n//             id={this.state.id}\n//             onClick={() => this.checkGuess(this.state.id)}\n//             style={this.state.color}\n//         >\n//         </div>\n//         )\n//     }\n// }\n\nexport default ColorBall;\n"]},"metadata":{},"sourceType":"module"}