{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\"; // import { useDispatch } from \"react-redux\";\n\nimport { Route, Switch } from \"react-router-dom\"; // import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\n\nimport firebase from \"./firebase\";\nimport Controller from './Controller';\n\nfunction App() {\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(user => console.log('Logged in')).catch(error => console.error(error));\n  }; // const dispatch = useDispatch();\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // useEffect(() => {\n  //   dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  // }, [dispatch]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        onLogin: onLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/App.js"],"names":["React","useState","useEffect","Route","Switch","firebase","Controller","App","onLogin","email","password","auth","signInWithEmailAndPassword","then","user","console","log","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACnCL,IAAAA,QAAQ,CACLM,IADH,GAEGC,0BAFH,CAE8BH,KAF9B,EAEqCC,QAFrC,EAGGG,IAHH,CAGQC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAHhB,EAIGC,KAJH,CAISC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAcA,KAAd,CAJlB;AAKD,GAND,CADa,CAQb;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BAeE,QAAC,KAAD;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAfF,mBADF;AAqBD;;KAnCQD,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n// import SignupFormPage from \"./Components/SignupFormPage\";\n// import * as sessionActions from \"./store/session\";\n// import Navigation from \"./Components/Navigation\";\n// import ControllerContainer from './ControllerContainer'\nimport firebase from \"./firebase\";\nimport Controller from './Controller'\n\nfunction App() {\n  const onLogin = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(user => console.log('Logged in'))\n      .catch(error => console.error(error))\n  }\n  // const dispatch = useDispatch();\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // useEffect(() => {\n  //   dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  // }, [dispatch]);\n\n  return (\n    <>\n      {/* <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n\n      )} */}\n      {/* <Switch>\n        <Route exact path ='/' component={Controller}>\n        <Route path ='/players' component={Controller}>\n\n      </Switch> */}\n      <Route>\n          <Controller onLogin={onLogin}/>\n      </Route>\n    </>\n)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}