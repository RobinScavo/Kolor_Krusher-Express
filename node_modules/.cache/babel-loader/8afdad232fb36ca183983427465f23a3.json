{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var _this=this;import React,{useState,useContext}from'react';import ColorContext from'../../ColorContext';import{HSLtoRGB,RGBtoHEX,HEXtoRGB,RGBtoHSL}from'../../PureFunctions';import LeftConvertPanel from'./LeftConvertPanel';import RightConvertPanel from'./RightConvertPanel';import'./ConvertContainer.css';var ConvertContainer=function ConvertContainer(){var values=useContext(ColorContext);var rgbLabelArray=['Red','Green','Blue'];var rgbInputArray=['From 0 to 255','From 0 to 255','From 0 to 255'];var hslLabelArray=['Hue','Saturation','Light'];var hslInputArray=['From 0 to 360','From 0 to 100','From 0 to 100'];var hexLabelArray=['Red','Green','Blue'];var hexInputArray=['From 00 to FF','From 00 to FF','From 00 to FF'];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),togglePosition=_useState2[0],setTogglePosition=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),fromRgbButton=_useState4[0],setFromRgbButton=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),fromHslButton=_useState6[0],setFromHslButton=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),fromHexButton=_useState8[0],setFromHexButton=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),toRgbButton=_useState10[0],setToRgbButton=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),toHslButton=_useState12[0],setToHslButton=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),toHexButton=_useState14[0],setToHexButton=_useState14[1];var _useState15=useState(rgbLabelArray[0]),_useState16=_slicedToArray(_useState15,2),fromTopLabel=_useState16[0],setFromTopLabel=_useState16[1];var _useState17=useState(rgbLabelArray[1]),_useState18=_slicedToArray(_useState17,2),fromMiddleLabel=_useState18[0],setFromMiddleLabel=_useState18[1];var _useState19=useState(rgbLabelArray[2]),_useState20=_slicedToArray(_useState19,2),fromBottomLabel=_useState20[0],setFromBottomLabel=_useState20[1];var _useState21=useState(rgbInputArray[0]),_useState22=_slicedToArray(_useState21,2),fromTopInput=_useState22[0],setFromTopInput=_useState22[1];var _useState23=useState(rgbInputArray[1]),_useState24=_slicedToArray(_useState23,2),fromMiddleInput=_useState24[0],setFromMiddleInput=_useState24[1];var _useState25=useState(rgbInputArray[2]),_useState26=_slicedToArray(_useState25,2),fromBottomInput=_useState26[0],setFromBottomInput=_useState26[1];var _useState27=useState(hslLabelArray[0]),_useState28=_slicedToArray(_useState27,2),toTopLabel=_useState28[0],setToTopLabel=_useState28[1];var _useState29=useState(hslLabelArray[1]),_useState30=_slicedToArray(_useState29,2),toMiddleLabel=_useState30[0],setToMiddleLabel=_useState30[1];var _useState31=useState(hslLabelArray[2]),_useState32=_slicedToArray(_useState31,2),toBottomLabel=_useState32[0],setToBottomLabel=_useState32[1];var _useState33=useState(hslInputArray[0]),_useState34=_slicedToArray(_useState33,2),toTopInput=_useState34[0],setToTopInput=_useState34[1];var _useState35=useState(hslInputArray[1]),_useState36=_slicedToArray(_useState35,2),toMiddleInput=_useState36[0],setToMiddleInput=_useState36[1];var _useState37=useState(hslInputArray[2]),_useState38=_slicedToArray(_useState37,2),toBottomInput=_useState38[0],setToBottomInput=_useState38[1];var toggleTogglePosition=function toggleTogglePosition(){setTogglePosition(!togglePosition);};var toggleFromRgbButton=function toggleFromRgbButton(){if(toRgbButton){setToRgbButton(false);setToHslButton(true);}if(fromRgbButton)return;if(fromHslButton)setFromHslButton(false);if(fromHexButton)setFromHexButton(false);setFromRgbButton(true);setFromTopLabel(rgbLabelArray[0]);setFromMiddleLabel(rgbLabelArray[1]);setFromBottomLabel(rgbLabelArray[2]);setFromTopInput(rgbInputArray[0]);setFromMiddleInput(rgbInputArray[1]);setFromBottomInput(rgbInputArray[2]);};var toggleFromHslButton=function toggleFromHslButton(){if(toHslButton){setToHslButton(false);setToRgbButton(true);}if(fromRgbButton)setFromRgbButton(false);if(fromHexButton)setFromHexButton(false);setFromHslButton(true);setFromTopLabel(hslLabelArray[0]);setFromMiddleLabel(hslLabelArray[1]);setFromBottomLabel(hslLabelArray[2]);setFromTopInput(hslInputArray[0]);setFromMiddleInput(hslInputArray[1]);setFromBottomInput(hslInputArray[2]);};var toggleFromHexButton=function toggleFromHexButton(){if(toHexButton){setToHexButton(false);setToRgbButton(true);}if(fromHslButton)setFromHslButton(false);if(fromRgbButton)setFromRgbButton(false);setFromHexButton(true);setFromTopLabel(hexLabelArray[0]);setFromMiddleLabel(hexLabelArray[1]);setFromBottomLabel(hexLabelArray[2]);setFromTopInput(hexInputArray[0]);setFromMiddleInput(hexInputArray[1]);setFromBottomInput(hexInputArray[2]);};var toggleToRgbButton=function toggleToRgbButton(){if(fromRgbButton)return;if(toHexButton)setToHexButton(false);if(toHslButton)setToHslButton(false);setToRgbButton(true);setToTopLabel(rgbLabelArray[0]);setToMiddleLabel(rgbLabelArray[1]);setToBottomLabel(rgbLabelArray[2]);setToTopInput(rgbInputArray[0]);setToMiddleInput(rgbInputArray[1]);setToBottomInput(rgbInputArray[2]);};var toggleToHslButton=function toggleToHslButton(){if(fromHslButton)return;if(toHexButton)setToHexButton(false);if(toRgbButton)setToRgbButton(false);setToHslButton(true);setToTopLabel(hslLabelArray[0]);setToMiddleLabel(hslLabelArray[1]);setToBottomLabel(hslLabelArray[2]);setToTopInput(hslInputArray[0]);setToMiddleInput(hslInputArray[1]);setToBottomInput(hslInputArray[2]);};var toggleToHexButton=function toggleToHexButton(){if(fromHexButton)return;if(toRgbButton)setToRgbButton(false);if(toHslButton)setToHslButton(false);setToHexButton(true);setToTopLabel(hexLabelArray[0]);setToMiddleLabel(hexLabelArray[1]);setToBottomLabel(hexLabelArray[2]);setToTopInput(hexInputArray[0]);setToMiddleInput(hexInputArray[1]);setToBottomInput(hexInputArray[2]);};var playerSubmit=function playerSubmit(playerInput){//if they missed a field then exit function\nvar _iterator=_createForOfIteratorHelper(playerInput),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var input=_step.value;if(input.includes('From'))return;}//validate input\n}catch(err){_iterator.e(err);}finally{_iterator.f();}var tempInput=checkInput(playerInput);//display any input errors while retaining good ones\nsetFromTopInput(\"\".concat(tempInput[0]));setFromMiddleInput(\"\".concat(tempInput[1]));setFromBottomInput(\"\".concat(tempInput[2]));var renderedColor='';var displayedValue='';//RGB to HSL\nif(fromRgbButton&&toHslButton){renderedColor=tempInput.join(', ');displayedValue=RGBtoHSL(renderedColor);//HSL to RGB\n}else if(fromHslButton&&toRgbButton){var stringHSL=\"\".concat(tempInput[0],\", \").concat(tempInput[1],\"%, \").concat(tempInput[2],\"%\");renderedColor=HSLtoRGB(stringHSL);displayedValue=renderedColor;//Hex to RGB\n}else if(fromHexButton&&toRgbButton){renderedColor=HEXtoRGB(\"#\".concat(tempInput.join('')));displayedValue=renderedColor;//RGB to HEX\n}else if(fromRgbButton&&toHexButton){renderedColor=tempInput.join(', ');displayedValue=RGBtoHEX(tempInput.join(','));//HSL to HEX\n}else if(fromHslButton&&toHexButton){var _stringHSL=\"\".concat(tempInput[0],\", \").concat(tempInput[1],\"%, \").concat(tempInput[2],\"%\");renderedColor=HSLtoRGB(_stringHSL);displayedValue=RGBtoHEX(renderedColor);//HEX to HSL\n}else if(_this.state.fromHexButton&&_this.state.toHslButton){renderedColor=HEXtoRGB(\"#\".concat(tempInput.join('')));displayedValue=RGBtoHSL(renderedColor);}//display converted values\nvar displayArray=displayedValue.split(',');setToTopInput(\"\".concat(displayArray[0]));setToMiddleInput(\"\".concat(displayArray[1]));setToBottomInput(\"\".concat(displayArray[2]));//render player color with compliments\nvalues.setCustomColor(renderedColor);};var checkInput=function checkInput(playerInput){var result=[];//RGB input\nif(fromRgbButton){for(var i=0;i<3;i++){if(!Number(playerInput[i])&&Number(playerInput[i])!==0){result.push('From 0 to 255!');}else if(playerInput[i]<0||playerInput[i]>255){result.push('From 0 to 255!');}else{result.push(playerInput[i]);}}}//HSL input\nif(fromHslButton){if(playerInput[0]<0||playerInput[0]>360||!Number(playerInput[0])){result.push('From 0 to 360');}else{result.push(playerInput[0]);}if(playerInput[1]<0||playerInput[1]>100||!Number(playerInput[1])){result.push('From 0 to 100');}else{result.push(playerInput[1]);}if(playerInput[2]<0||playerInput[2]>100||!Number(playerInput[2])){result.push('From 0 to 100');}else{result.push(playerInput[2]);}}//HEX input\nif(fromHexButton){var validNumberInputs=[0,1,2,3,4,5,6,7,8,9];var validLetterInputs=['A','B','C','D','E','F'];for(var _i=0;_i<3;_i++){if(playerInput[_i].length!==2){result.push('From 00 to FF');continue;}if((validNumberInputs.includes(Number(playerInput[_i][0]))||validLetterInputs.includes(playerInput[_i][0]))&&(validNumberInputs.includes(Number(playerInput[_i][1]))||validLetterInputs.includes(playerInput[_i][1]))){result.push(playerInput[_i]);}else{result.push('From 00 to FF');}}}return result;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LeftConvertPanel,{fromRgbButton:fromRgbButton,fromHslButton:fromHslButton,fromHexButton:fromHexButton,toRgbButton:toRgbButton,toHslButton:toHslButton,toHexButton:toHexButton,repeatRender:values.repeatRender,togglePosition:togglePosition,fromTopLabel:fromTopLabel,fromMiddleLabel:fromMiddleLabel,fromBottomLabel:fromBottomLabel,fromTopInput:fromTopInput,fromMiddleInput:fromMiddleInput,fromBottomInput:fromBottomInput,toggleFromRgbButton:toggleFromRgbButton,toggleFromHslButton:toggleFromHslButton,toggleFromHexButton:toggleFromHexButton,toggleToRgbButton:toggleToRgbButton,toggleToHslButton:toggleToHslButton,toggleToHexButton:toggleToHexButton,toggleTogglePosition:toggleTogglePosition,toggleRepeatRender:values.toggleRepeatRender,playerSubmit:playerSubmit}),/*#__PURE__*/_jsx(RightConvertPanel,{toTopLabel:toTopLabel,toMiddleLabel:toMiddleLabel,toBottomLabel:toBottomLabel,toTopInput:toTopInput,toMiddleInput:toMiddleInput,toBottomInput:toBottomInput,togglePosition:togglePosition,repeatRender:values.repeatRender,toggleCreateTriadic:values.toggleCreateTriadic,toggleCreateAnalogous:values.toggleCreateAnalogous,toggleCreatePastel:values.toggleCreatePastel,toggleRepeatRender:values.toggleRepeatRender,toggleTogglePosition:toggleTogglePosition})]});};export default ConvertContainer;","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Footer/ConvertContainer.js"],"names":["React","useState","useContext","ColorContext","HSLtoRGB","RGBtoHEX","HEXtoRGB","RGBtoHSL","LeftConvertPanel","RightConvertPanel","ConvertContainer","values","rgbLabelArray","rgbInputArray","hslLabelArray","hslInputArray","hexLabelArray","hexInputArray","togglePosition","setTogglePosition","fromRgbButton","setFromRgbButton","fromHslButton","setFromHslButton","fromHexButton","setFromHexButton","toRgbButton","setToRgbButton","toHslButton","setToHslButton","toHexButton","setToHexButton","fromTopLabel","setFromTopLabel","fromMiddleLabel","setFromMiddleLabel","fromBottomLabel","setFromBottomLabel","fromTopInput","setFromTopInput","fromMiddleInput","setFromMiddleInput","fromBottomInput","setFromBottomInput","toTopLabel","setToTopLabel","toMiddleLabel","setToMiddleLabel","toBottomLabel","setToBottomLabel","toTopInput","setToTopInput","toMiddleInput","setToMiddleInput","toBottomInput","setToBottomInput","toggleTogglePosition","toggleFromRgbButton","toggleFromHslButton","toggleFromHexButton","toggleToRgbButton","toggleToHslButton","toggleToHexButton","playerSubmit","playerInput","input","includes","tempInput","checkInput","renderedColor","displayedValue","join","stringHSL","state","displayArray","split","setCustomColor","result","i","Number","push","validNumberInputs","validLetterInputs","length","repeatRender","toggleRepeatRender","toggleCreateTriadic","toggleCreateAnalogous","toggleCreatePastel"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\n\nimport ColorContext from '../../ColorContext';\nimport { HSLtoRGB, RGBtoHEX, HEXtoRGB, RGBtoHSL } from '../../PureFunctions'\nimport LeftConvertPanel from './LeftConvertPanel';\nimport RightConvertPanel from './RightConvertPanel';\n\nimport './ConvertContainer.css'\n\nconst ConvertContainer = () => {\n    const values = useContext(ColorContext);\n\n    const rgbLabelArray = ['Red', 'Green', 'Blue'];\n    const rgbInputArray = ['From 0 to 255', 'From 0 to 255', 'From 0 to 255'];\n    const hslLabelArray = ['Hue', 'Saturation', 'Light'];\n    const hslInputArray = ['From 0 to 360', 'From 0 to 100', 'From 0 to 100'];\n    const hexLabelArray = ['Red', 'Green', 'Blue'];\n    const hexInputArray = ['From 00 to FF', 'From 00 to FF', 'From 00 to FF'];\n\n    const [togglePosition, setTogglePosition] = useState(false);\n\n    const [fromRgbButton, setFromRgbButton] = useState(true)\n    const [fromHslButton, setFromHslButton] = useState(false)\n    const [fromHexButton, setFromHexButton] = useState(false)\n\n    const [toRgbButton, setToRgbButton] = useState(false)\n    const [toHslButton, setToHslButton] = useState(true)\n    const [toHexButton, setToHexButton] = useState(false)\n\n    const [fromTopLabel, setFromTopLabel] = useState(rgbLabelArray[0])\n    const [fromMiddleLabel, setFromMiddleLabel] = useState(rgbLabelArray[1])\n    const [fromBottomLabel, setFromBottomLabel] = useState(rgbLabelArray[2])\n\n    const [fromTopInput, setFromTopInput] = useState(rgbInputArray[0])\n    const [fromMiddleInput, setFromMiddleInput] = useState(rgbInputArray[1])\n    const [fromBottomInput, setFromBottomInput] = useState(rgbInputArray[2])\n\n    const [toTopLabel, setToTopLabel] = useState(hslLabelArray[0])\n    const [toMiddleLabel, setToMiddleLabel] = useState(hslLabelArray[1])\n    const [toBottomLabel, setToBottomLabel] = useState(hslLabelArray[2])\n\n    const [toTopInput, setToTopInput] = useState(hslInputArray[0])\n    const [toMiddleInput, setToMiddleInput] = useState(hslInputArray[1])\n    const [toBottomInput, setToBottomInput] = useState(hslInputArray[2])\n\n    const toggleTogglePosition = () => {setTogglePosition(!togglePosition)}\n\n    const toggleFromRgbButton = () => {\n        if (toRgbButton) {\n            setToRgbButton(false)\n            setToHslButton(true)\n        }\n        if (fromRgbButton) return;\n        if (fromHslButton) setFromHslButton(false)\n        if (fromHexButton) setFromHexButton(false)\n\n        setFromRgbButton(true)\n        setFromTopLabel(rgbLabelArray[0])\n        setFromMiddleLabel(rgbLabelArray[1])\n        setFromBottomLabel(rgbLabelArray[2])\n        setFromTopInput(rgbInputArray[0])\n        setFromMiddleInput(rgbInputArray[1])\n        setFromBottomInput(rgbInputArray[2])\n    }\n\n    const toggleFromHslButton = () => {\n        if (toHslButton) {\n            setToHslButton(false)\n            setToRgbButton(true)\n        }\n        if (fromRgbButton) setFromRgbButton(false)\n        if (fromHexButton) setFromHexButton(false)\n\n        setFromHslButton(true)\n        setFromTopLabel(hslLabelArray[0])\n        setFromMiddleLabel(hslLabelArray[1])\n        setFromBottomLabel(hslLabelArray[2])\n        setFromTopInput(hslInputArray[0])\n        setFromMiddleInput(hslInputArray[1])\n        setFromBottomInput(hslInputArray[2])\n    }\n\n    const toggleFromHexButton = () => {\n        if (toHexButton) {\n            setToHexButton(false)\n            setToRgbButton(true)\n        }\n        if (fromHslButton) setFromHslButton(false)\n        if (fromRgbButton) setFromRgbButton(false)\n\n        setFromHexButton(true)\n        setFromTopLabel(hexLabelArray[0])\n        setFromMiddleLabel(hexLabelArray[1])\n        setFromBottomLabel(hexLabelArray[2])\n        setFromTopInput(hexInputArray[0])\n        setFromMiddleInput(hexInputArray[1])\n        setFromBottomInput(hexInputArray[2])\n    }\n\n    const toggleToRgbButton = () => {\n        if (fromRgbButton) return\n        if (toHexButton) setToHexButton(false)\n        if (toHslButton) setToHslButton(false)\n\n        setToRgbButton(true)\n        setToTopLabel(rgbLabelArray[0])\n        setToMiddleLabel(rgbLabelArray[1])\n        setToBottomLabel(rgbLabelArray[2])\n        setToTopInput(rgbInputArray[0])\n        setToMiddleInput(rgbInputArray[1])\n        setToBottomInput(rgbInputArray[2])\n    }\n\n    const toggleToHslButton = () => {\n        if (fromHslButton) return\n        if (toHexButton) setToHexButton(false)\n        if (toRgbButton) setToRgbButton(false)\n\n        setToHslButton(true)\n        setToTopLabel(hslLabelArray[0])\n        setToMiddleLabel(hslLabelArray[1])\n        setToBottomLabel(hslLabelArray[2])\n        setToTopInput(hslInputArray[0])\n        setToMiddleInput(hslInputArray[1])\n        setToBottomInput(hslInputArray[2])\n    }\n\n    const toggleToHexButton = () => {\n        if (fromHexButton) return\n        if (toRgbButton) setToRgbButton(false)\n        if (toHslButton) setToHslButton(false)\n\n        setToHexButton(true)\n        setToTopLabel(hexLabelArray[0])\n        setToMiddleLabel(hexLabelArray[1])\n        setToBottomLabel(hexLabelArray[2])\n        setToTopInput(hexInputArray[0])\n        setToMiddleInput(hexInputArray[1])\n        setToBottomInput(hexInputArray[2])\n    }\n\n    const playerSubmit = (playerInput) => {\n        //if they missed a field then exit function\n        for (let input of playerInput) {\n            if (input.includes('From')) return\n        }\n\n        //validate input\n        const tempInput = checkInput(playerInput)\n\n        //display any input errors while retaining good ones\n        setFromTopInput(`${tempInput[0]}`)\n        setFromMiddleInput(`${tempInput[1]}`)\n        setFromBottomInput(`${tempInput[2]}`)\n\n        let renderedColor = '';\n        let displayedValue = '';\n\n        //RGB to HSL\n        if ((fromRgbButton  && toHslButton)) {\n            renderedColor = tempInput.join(', ');\n            displayedValue = RGBtoHSL(renderedColor)\n\n        //HSL to RGB\n        } else if (fromHslButton && toRgbButton) {\n            let stringHSL = `${tempInput[0]}, ${tempInput[1]}%, ${tempInput[2]}%`\n            renderedColor = HSLtoRGB(stringHSL);\n            displayedValue = renderedColor;\n\n        //Hex to RGB\n        } else if (fromHexButton && toRgbButton) {\n            renderedColor = HEXtoRGB(`#${tempInput.join('')}`);\n            displayedValue = renderedColor;\n\n        //RGB to HEX\n        } else if (fromRgbButton && toHexButton) {\n            renderedColor = tempInput.join(', ');\n            displayedValue = RGBtoHEX(tempInput.join(','))\n\n        //HSL to HEX\n        } else if (fromHslButton && toHexButton) {\n            let stringHSL = `${tempInput[0]}, ${tempInput[1]}%, ${tempInput[2]}%`\n            renderedColor = HSLtoRGB(stringHSL)\n            displayedValue = RGBtoHEX(renderedColor)\n\n        //HEX to HSL\n        } else if (this.state.fromHexButton && this.state.toHslButton) {\n            renderedColor = HEXtoRGB(`#${tempInput.join('')}`);\n            displayedValue = RGBtoHSL(renderedColor);\n        }\n\n        //display converted values\n        let displayArray = displayedValue.split(',')\n        setToTopInput(`${displayArray[0]}`)\n        setToMiddleInput(`${displayArray[1]}`)\n        setToBottomInput(`${displayArray[2]}`)\n\n        //render player color with compliments\n        values.setCustomColor(renderedColor);\n    }\n\n    const checkInput = (playerInput) => {\n        const result = [];\n\n        //RGB input\n        if (fromRgbButton) {\n            for (let i = 0; i < 3; i++) {\n                if (!Number(playerInput[i]) && Number(playerInput[i]) !== 0) {\n                    result.push('From 0 to 255!')\n                } else if (playerInput[i] < 0 || playerInput[i] > 255) {\n                    result.push('From 0 to 255!')\n                } else {\n                    result.push(playerInput[i])\n                }\n            }\n        }\n\n        //HSL input\n        if (fromHslButton) {\n            if (playerInput[0] < 0 || playerInput[0] > 360 || !Number(playerInput[0])) {\n                result.push('From 0 to 360')\n            } else {\n                result.push(playerInput[0])\n            }\n            if (playerInput[1] < 0 || playerInput[1] > 100 || !Number(playerInput[1])) {\n                result.push('From 0 to 100')\n            } else {\n                result.push(playerInput[1])\n            }\n            if (playerInput[2] < 0 || playerInput[2] > 100 || !Number(playerInput[2])) {\n                result.push('From 0 to 100')\n            } else  {\n                result.push(playerInput[2])\n            }\n        }\n\n        //HEX input\n        if (fromHexButton) {\n            const validNumberInputs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n            const validLetterInputs = ['A', 'B', 'C', 'D', 'E', 'F'];\n            for (let i = 0; i < 3; i++) {\n                if (playerInput[i].length !== 2) {\n                    result.push('From 00 to FF')\n                    continue;\n                }\n                if ((validNumberInputs.includes(Number(playerInput[i][0]))||\n                     validLetterInputs.includes(playerInput[i][0])) &&\n                    (validNumberInputs.includes(Number(playerInput[i][1])) ||\n                     validLetterInputs.includes(playerInput[i][1]))) {\n                    result.push(playerInput[i])\n                } else {\n                    result.push('From 00 to FF')\n                }\n            }\n        }\n        return result;\n    }\n\n    return (\n        <>\n            <LeftConvertPanel\n                fromRgbButton={fromRgbButton}\n                fromHslButton={fromHslButton}\n                fromHexButton={fromHexButton}\n                toRgbButton={toRgbButton}\n                toHslButton={toHslButton}\n                toHexButton={toHexButton}\n                repeatRender={values.repeatRender}\n                togglePosition={togglePosition}\n\n                fromTopLabel={fromTopLabel}\n                fromMiddleLabel={fromMiddleLabel}\n                fromBottomLabel={fromBottomLabel}\n                fromTopInput={fromTopInput}\n                fromMiddleInput={fromMiddleInput}\n                fromBottomInput={fromBottomInput}\n\n                toggleFromRgbButton={toggleFromRgbButton}\n                toggleFromHslButton={toggleFromHslButton}\n                toggleFromHexButton={toggleFromHexButton}\n                toggleToRgbButton={toggleToRgbButton}\n                toggleToHslButton={toggleToHslButton}\n                toggleToHexButton={toggleToHexButton}\n                toggleTogglePosition={toggleTogglePosition}\n                toggleRepeatRender={values.toggleRepeatRender}\n                playerSubmit={playerSubmit}\n            />\n            <RightConvertPanel\n                toTopLabel={toTopLabel}\n                toMiddleLabel={toMiddleLabel}\n                toBottomLabel={toBottomLabel}\n                toTopInput={toTopInput}\n                toMiddleInput={toMiddleInput}\n                toBottomInput={toBottomInput}\n                togglePosition={togglePosition}\n                repeatRender={values.repeatRender}\n\n                toggleCreateTriadic={values.toggleCreateTriadic}\n                toggleCreateAnalogous={values.toggleCreateAnalogous}\n                toggleCreatePastel={values.toggleCreatePastel}\n                toggleRepeatRender={values.toggleRepeatRender}\n                toggleTogglePosition={toggleTogglePosition}\n            />\n        </>\n    )\n}\n\nexport default ConvertContainer;\n"]},"metadata":{},"sourceType":"module"}