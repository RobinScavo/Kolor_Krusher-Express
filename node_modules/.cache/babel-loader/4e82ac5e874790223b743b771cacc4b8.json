{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/ConvertInstructionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ColorContext from '../../ColorContext';\nimport './BattleInstructionModal.css';\nimport './ConvertInstructionModal.css';\n\nconst ConvertInstructionModal = () => {\n  _s();\n\n  const values = useContext(ColorContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"convertInstructionDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"explanationDiv\",\n      children: [\"While RGB and Hex values use proportions of red, green and blue, HSL (Hue, Saturation, Light) is based on color wheel position. By subtracting 180 from the hue you can find its compliment. Use the \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"expSpan\",\n        children: \"Color Converter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }, this), \"to convert your color values or find their compliments.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheelDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"imageCredit\",\n          onClick: () => window.open('https://contentwriters.com/blog/psychology-color-content-marketing/'),\n          children: \"Image credit: Deborah K.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wheelImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"wheelLabel\",\n          children: \"COMPLIMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheelImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheelImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wheelLabelDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheelLabel\",\n        children: \"TRIADIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheelLabel\",\n        children: \"SPLIT COMPLIMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"gotItButton\",\n      onClick: () => {\n        values.toggleConvertInstructionModal();\n        values.toggleStartConvert();\n        values.startGame();\n      },\n      children: \"Got it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConvertInstructionModal, \"CCktCQUXVHOcUIrlvyB41gXaY/Q=\");\n\n_c = ConvertInstructionModal;\nexport default ConvertInstructionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertInstructionModal\");","map":{"version":3,"sources":["/Users/robinscavo/Desktop/projects/KolorKrush/Kolor_Krusher-Express/frontend/src/Components/Modals/ConvertInstructionModal.js"],"names":["React","useContext","ColorContext","ConvertInstructionModal","values","window","open","toggleConvertInstructionModal","toggleStartConvert","startGame"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,OAAO,8BAAP;AACA,OAAO,+BAAP;;AAGA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AAClC,QAAMC,MAAM,GAAGH,UAAU,CAACC,YAAD,CAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,uOAG4B;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AACI,UAAA,OAAO,EAAE,MAAMG,MAAM,CAACC,IAAP,CAAY,qEAAZ,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAoBI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAwBI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAiC,MAAA,OAAO,EAAE,MAAM;AAC5CF,QAAAA,MAAM,CAACG,6BAAP;AACAH,QAAAA,MAAM,CAACI,kBAAP;AACAJ,QAAAA,MAAM,CAACK,SAAP;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAnCD;;GAAMN,uB;;KAAAA,uB;AAqCN,eAAeA,uBAAf","sourcesContent":["import React, { useContext } from 'react';\n\nimport ColorContext from '../../ColorContext';\n\nimport './BattleInstructionModal.css';\nimport './ConvertInstructionModal.css';\n\n\nconst ConvertInstructionModal = () => {\n    const values = useContext(ColorContext);\n\n    return (\n        <div className='convertInstructionDiv'>\n\n            <div className='explanationDiv'>While RGB and Hex values use proportions\n                of red, green and blue, HSL (Hue, Saturation, Light) is based on\n                color wheel position. By subtracting 180 from the hue you can find\n                its compliment. Use the <span className='expSpan'>Color Converter </span>\n                to convert your color values or find their compliments.</div>\n            <div className='wheelDiv'>\n                <div className='wheel'>\n                    <h3 className='imageCredit'\n                        onClick={() => window.open('https://contentwriters.com/blog/psychology-color-content-marketing/')}>\n                            Image credit: Deborah K.\n                    </h3>\n\n                    <div className='wheelImage'></div>\n                    <h2 className='wheelLabel'>COMPLIMENT</h2>\n                </div>\n                <div className='wheelImage'></div>\n                <div className='wheelImage'></div>\n            </div>\n            <div className='wheelLabelDiv'>\n                <div className='wheelLabel'>TRIADIC</div>\n                <div className='wheelLabel'>SPLIT COMPLIMENT</div>\n            </div>\n            <button  className='gotItButton' onClick={() => {\n                values.toggleConvertInstructionModal();\n                values.toggleStartConvert();\n                values.startGame();\n              }}>Got it!</button>\n        </div>\n    )\n}\n\nexport default ConvertInstructionModal\n"]},"metadata":{},"sourceType":"module"}